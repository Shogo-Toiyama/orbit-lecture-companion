[
  {
    "context_before_main_text": [
      {
        "sid": "s000416",
        "text": "In this example, the only source is A.",
        "start": 2510880,
        "end": 2514240,
        "speaker": "A"
      },
      {
        "sid": "s000417",
        "text": "B is not a source.",
        "start": 2517119,
        "end": 2518320,
        "speaker": "A"
      },
      {
        "sid": "s000418",
        "text": "C is not a source.",
        "start": 2518320,
        "end": 2519320,
        "speaker": "A"
      },
      {
        "sid": "s000419",
        "text": "B is not a source.",
        "start": 2519320,
        "end": 2520640,
        "speaker": "A"
      },
      {
        "sid": "s000420",
        "text": "So A is the only one.",
        "start": 2520640,
        "end": 2522000,
        "speaker": "A"
      },
      {
        "sid": "s000421",
        "text": "Sometimes initially there could be 18 for I'll write all of them down in a linked list or in some kind of a data structure.",
        "start": 2523040,
        "end": 2532330,
        "speaker": "A"
      },
      {
        "sid": "s000422",
        "text": "Okay, so step one of the algorithm, identify all sources.",
        "start": 2535290,
        "end": 2542890,
        "speaker": "A"
      },
      {
        "sid": "s000423",
        "text": "Step two, get one of the sources and remove it from the List of, of sources and output that.",
        "start": 2545210,
        "end": 2555160,
        "speaker": "A"
      },
      {
        "sid": "s000424",
        "text": "So this is my output.",
        "start": 2555800,
        "end": 2557480,
        "speaker": "A"
      },
      {
        "sid": "s000425",
        "text": "The first thing I output is A.",
        "start": 2558920,
        "end": 2561240,
        "speaker": "A"
      }
    ],
    "main_text": [
      {
        "sid": "s000426",
        "text": "And this doesn't exist anymore.",
        "start": 2563160,
        "end": 2565560,
        "speaker": "A"
      },
      {
        "sid": "s000427",
        "text": "By any data structure methodology that I like, it doesn't exist.",
        "start": 2567320,
        "end": 2571640,
        "speaker": "A"
      },
      {
        "sid": "s000428",
        "text": "Advancing a pointer, remembering a counter, whatever, in the new graph.",
        "start": 2572440,
        "end": 2578840,
        "speaker": "A"
      },
      {
        "sid": "s000429",
        "text": "So.",
        "start": 2578920,
        "end": 2579140,
        "speaker": "A"
      },
      {
        "sid": "s000430",
        "text": "So when I remove A, I also remove it from a graph.",
        "start": 2579290,
        "end": 2583610,
        "speaker": "A"
      },
      {
        "sid": "s000431",
        "text": "So when A is removed, by definition, the edges connecting to A don't have any meaning.",
        "start": 2585290,
        "end": 2592090,
        "speaker": "A"
      },
      {
        "sid": "s000432",
        "text": "So I remove them.",
        "start": 2592570,
        "end": 2593850,
        "speaker": "A"
      },
      {
        "sid": "s000433",
        "text": "The previous graph with A in there wasn't that.",
        "start": 2601050,
        "end": 2605150,
        "speaker": "A"
      },
      {
        "sid": "s000434",
        "text": "Because if it's not a dag, it does not have a topological sort.",
        "start": 2606420,
        "end": 2611140,
        "speaker": "A"
      },
      {
        "sid": "s000435",
        "text": "You will stop if it is a DAG because of site one, it must have a source.",
        "start": 2611140,
        "end": 2616900,
        "speaker": "A"
      },
      {
        "sid": "s000436",
        "text": "When I remove a source and the edges, I haven't created any edges.",
        "start": 2617780,
        "end": 2623060,
        "speaker": "A"
      },
      {
        "sid": "s000437",
        "text": "The new graph is also a dag.",
        "start": 2623620,
        "end": 2626660,
        "speaker": "A"
      },
      {
        "sid": "s000438",
        "text": "I didn't have any cycle before.",
        "start": 2627460,
        "end": 2629460,
        "speaker": "A"
      },
      {
        "sid": "s000439",
        "text": "By removing a stuff, obviously I don't create a cycle.",
        "start": 2629780,
        "end": 2633380,
        "speaker": "A"
      },
      {
        "sid": "s000440",
        "text": "I remove any cycle, if anything.",
        "start": 2633940,
        "end": 2636340,
        "speaker": "A"
      },
      {
        "sid": "s000441",
        "text": "So removal does not create a cycle.",
        "start": 2637940,
        "end": 2640660,
        "speaker": "A"
      },
      {
        "sid": "s000442",
        "text": "Therefore, the new graph here is also a dag.",
        "start": 2641060,
        "end": 2645780,
        "speaker": "A"
      },
      {
        "sid": "s000443",
        "text": "Yes.",
        "start": 2648900,
        "end": 2649380,
        "speaker": "A"
      },
      {
        "sid": "s000444",
        "text": "Is that like that's the you just made?",
        "start": 2649460,
        "end": 2651300,
        "speaker": "A"
      },
      {
        "sid": "s000445",
        "text": "Is that.",
        "start": 2651300,
        "end": 2651780,
        "speaker": "A"
      },
      {
        "sid": "s000446",
        "text": "Is that enough?",
        "start": 2652260,
        "end": 2652940,
        "speaker": "A"
      },
      {
        "sid": "s000447",
        "text": "Sufficient to say, removing a node from a DAG still basically that correct?",
        "start": 2652940,
        "end": 2658070,
        "speaker": "A"
      },
      {
        "sid": "s000448",
        "text": "Exactly.",
        "start": 2658070,
        "end": 2658750,
        "speaker": "A"
      },
      {
        "sid": "s000449",
        "text": "Now I find all the sources again, pictorially.",
        "start": 2660430,
        "end": 2665230,
        "speaker": "A"
      },
      {
        "sid": "s000450",
        "text": "B and C going to be the sources.",
        "start": 2665390,
        "end": 2667710,
        "speaker": "A"
      },
      {
        "sid": "s000451",
        "text": "I'm going to put them in the sources list in any manner I like their order.",
        "start": 2668110,
        "end": 2673110,
        "speaker": "A"
      },
      {
        "sid": "s000452",
        "text": "It doesn't matter what kind of a structure I use.",
        "start": 2673110,
        "end": 2675910,
        "speaker": "A"
      },
      {
        "sid": "s000453",
        "text": "Doesn't matter.",
        "start": 2675910,
        "end": 2676670,
        "speaker": "A"
      },
      {
        "sid": "s000454",
        "text": "Well, it does matter, but we'll get into that.",
        "start": 2677470,
        "end": 2679950,
        "speaker": "A"
      },
      {
        "sid": "s000455",
        "text": "But it's a simple structure.",
        "start": 2679950,
        "end": 2681710,
        "speaker": "A"
      },
      {
        "sid": "s000456",
        "text": "I put B and C. Now I repeat the same algorithm that I before, which was remove a source from the list, remove that vertex from the graph and all the edges out of it.",
        "start": 2682440,
        "end": 2695960,
        "speaker": "A"
      },
      {
        "sid": "s000457",
        "text": "So here are the teri I do B, I remove that.",
        "start": 2696440,
        "end": 2701480,
        "speaker": "A"
      },
      {
        "sid": "s000458",
        "text": "I remove B, I remove all the edges coming out of it.",
        "start": 2701560,
        "end": 2705240,
        "speaker": "A"
      },
      {
        "sid": "s000459",
        "text": "Is there a brand new source now?",
        "start": 2705720,
        "end": 2708290,
        "speaker": "A"
      },
      {
        "sid": "s000460",
        "text": "Which is what?",
        "start": 2710210,
        "end": 2711170,
        "speaker": "A"
      },
      {
        "sid": "s000461",
        "text": "You still have C in the source?",
        "start": 2712690,
        "end": 2714450,
        "speaker": "A"
      },
      {
        "sid": "s000462",
        "text": "Yeah.",
        "start": 2714450,
        "end": 2714930,
        "speaker": "A"
      },
      {
        "sid": "s000463",
        "text": "So there are no sources while removing B, because D and E both are connected to A.",
        "start": 2714930,
        "end": 2723010,
        "speaker": "A"
      },
      {
        "sid": "s000464",
        "text": "Or I should say A is connected to both B and B.",
        "start": 2723490,
        "end": 2726850,
        "speaker": "A"
      },
      {
        "sid": "s000465",
        "text": "So now I don't need to put any other sources.",
        "start": 2727170,
        "end": 2730450,
        "speaker": "A"
      },
      {
        "sid": "s000466",
        "text": "I have not created any sources.",
        "start": 2730450,
        "end": 2733010,
        "speaker": "A"
      },
      {
        "sid": "s000467",
        "text": "I don't add anything to the source list.",
        "start": 2734540,
        "end": 2737020,
        "speaker": "A"
      },
      {
        "sid": "s000468",
        "text": "I go to the source list and if there is something there, I remove it.",
        "start": 2738780,
        "end": 2743100,
        "speaker": "A"
      },
      {
        "sid": "s000469",
        "text": "And obviously the edge is connected to it.",
        "start": 2745020,
        "end": 2747820,
        "speaker": "A"
      },
      {
        "sid": "s000470",
        "text": "Now I ask, are there any sources D and E?",
        "start": 2748780,
        "end": 2753260,
        "speaker": "A"
      },
      {
        "sid": "s000471",
        "text": "In any manner I like, I put D and E here, I remove one of them.",
        "start": 2753820,
        "end": 2760220,
        "speaker": "A"
      },
      {
        "sid": "s000472",
        "text": "There is no X coming out of it.",
        "start": 2762070,
        "end": 2763750,
        "speaker": "A"
      },
      {
        "sid": "s000473",
        "text": "Next phase, I remove E. Anytime I remove something, I output that.",
        "start": 2763750,
        "end": 2770390,
        "speaker": "A"
      },
      {
        "sid": "s000474",
        "text": "So I forgot to do it at every step.",
        "start": 2770390,
        "end": 2772670,
        "speaker": "A"
      },
      {
        "sid": "s000475",
        "text": "But it would have been A, B, C, E, G. Every time I remove a source, I output that.",
        "start": 2772670,
        "end": 2780630,
        "speaker": "A"
      },
      {
        "sid": "s000476",
        "text": "That's our topological source.",
        "start": 2780870,
        "end": 2783350,
        "speaker": "A"
      },
      {
        "sid": "s000477",
        "text": "Because everything, every time that I output something, that's a source for the remaining of the vertices.",
        "start": 2785030,
        "end": 2794130,
        "speaker": "A"
      },
      {
        "sid": "s000478",
        "text": "Therefore there are no edges from remaining vertices that comes back, say to C. Therefore all these have no edges coming to C. Therefore them appearing at after C is the correct order.",
        "start": 2796690,
        "end": 2815820,
        "speaker": "A"
      },
      {
        "sid": "s000479",
        "text": "Therefore I will follow the topological sort rule that when I output something, whenever there is an edge like ac, C must come after A in the list.",
        "start": 2818780,
        "end": 2833900,
        "speaker": "A"
      },
      {
        "sid": "s000480",
        "text": "I follow that because anytime I output, that's the same source for everything else.",
        "start": 2834380,
        "end": 2840470,
        "speaker": "A"
      },
      {
        "sid": "s000481",
        "text": "Source means no edges coming first.",
        "start": 2840950,
        "end": 2843350,
        "speaker": "A"
      },
      {
        "sid": "s000482",
        "text": "Yes, please.",
        "start": 2843510,
        "end": 2844230,
        "speaker": "A"
      },
      {
        "sid": "s000483",
        "text": "So in algorithm, every time you eliminate the source and all edges, you check if there's any other source of.",
        "start": 2844310,
        "end": 2851110,
        "speaker": "A"
      },
      {
        "sid": "s000484",
        "text": "Absolutely.",
        "start": 2851510,
        "end": 2852310,
        "speaker": "A"
      },
      {
        "sid": "s000485",
        "text": "Because I may need not.",
        "start": 2852550,
        "end": 2854350,
        "speaker": "A"
      },
      {
        "sid": "s000486",
        "text": "I may.",
        "start": 2854350,
        "end": 2854829,
        "speaker": "A"
      },
      {
        "sid": "s000487",
        "text": "I will need that in future steps.",
        "start": 2854829,
        "end": 2857350,
        "speaker": "A"
      },
      {
        "sid": "s000488",
        "text": "Okay?",
        "start": 2871680,
        "end": 2872160,
        "speaker": "A"
      },
      {
        "sid": "s000489",
        "text": "Yes, please.",
        "start": 2874240,
        "end": 2874960,
        "speaker": "A"
      },
      {
        "sid": "s000490",
        "text": "So only if after we remove all sources, we get like we put acquired resources or.",
        "start": 2875520,
        "end": 2881840,
        "speaker": "A"
      },
      {
        "sid": "s000491",
        "text": "No, when you remove one source, meaning you output one source, you have to see are there any sources left.",
        "start": 2882080,
        "end": 2889920,
        "speaker": "A"
      },
      {
        "sid": "s000492",
        "text": "And the only reason for that, I could wait for all the sources to be removed and do that.",
        "start": 2891290,
        "end": 2895930,
        "speaker": "A"
      },
      {
        "sid": "s000493",
        "text": "The reason I do it this way is for efficiency reason, time complexity reason.",
        "start": 2897050,
        "end": 2902250,
        "speaker": "A"
      },
      {
        "sid": "s000494",
        "text": "So correctness either way is fine.",
        "start": 2902890,
        "end": 2905290,
        "speaker": "A"
      },
      {
        "sid": "s000495",
        "text": "Okay, now what we need to do is to understand or agree.",
        "start": 2908650,
        "end": 2916170,
        "speaker": "A"
      },
      {
        "sid": "s000496",
        "text": "Graph is stored.",
        "start": 2916370,
        "end": 2918290,
        "speaker": "A"
      },
      {
        "sid": "s000497",
        "text": "I'm done with the algorithm and proof.",
        "start": 2919010,
        "end": 2921290,
        "speaker": "A"
      },
      {
        "sid": "s000498",
        "text": "There are a few things that still needs to be proved.",
        "start": 2921290,
        "end": 2924210,
        "speaker": "A"
      },
      {
        "sid": "s000499",
        "text": "Although we have a good feeling they are correct, I'm not going to sweat about them.",
        "start": 2925570,
        "end": 2929970,
        "speaker": "A"
      },
      {
        "sid": "s000500",
        "text": "But we still need to write some justification, some proof.",
        "start": 2930210,
        "end": 2934530,
        "speaker": "A"
      },
      {
        "sid": "s000501",
        "text": "But in order to look at the time complexity analysis, we need to go back and start talking about how am I representing a graph.",
        "start": 2935010,
        "end": 2945620,
        "speaker": "A"
      },
      {
        "sid": "s000502",
        "text": "There are two ways.",
        "start": 2946980,
        "end": 2948420,
        "speaker": "A"
      },
      {
        "sid": "s000503",
        "text": "There are many ways, but there are two standard ways to represent a graph.",
        "start": 2948420,
        "end": 2953140,
        "speaker": "A"
      },
      {
        "sid": "s000504",
        "text": "One is a linkless representation.",
        "start": 2957220,
        "end": 2960260,
        "speaker": "A"
      },
      {
        "sid": "s000505",
        "text": "So I'm going to use the example here.",
        "start": 2965380,
        "end": 2967400,
        "speaker": "A"
      },
      {
        "sid": "s000506",
        "text": "So every vertex is going to have a linked list of its own.",
        "start": 2968830,
        "end": 2973550,
        "speaker": "A"
      },
      {
        "sid": "s000507",
        "text": "So A, B, C, D and E. There are five vertices.",
        "start": 2974430,
        "end": 2982270,
        "speaker": "A"
      },
      {
        "sid": "s000508",
        "text": "There's going to be five link lists.",
        "start": 2982510,
        "end": 2985310,
        "speaker": "A"
      },
      {
        "sid": "s000509",
        "text": "A is connected to B and C. So I'm going to write, write B here and C here.",
        "start": 2988830,
        "end": 2995890,
        "speaker": "A"
      },
      {
        "sid": "s000510",
        "text": "This does not mean, although it may look like that, doesn't mean that B is connected to C. This all.",
        "start": 2998690,
        "end": 3006370,
        "speaker": "A"
      },
      {
        "sid": "s000511",
        "text": "All it means is that A is connected to all of these.",
        "start": 3006530,
        "end": 3010530,
        "speaker": "A"
      },
      {
        "sid": "s000512",
        "text": "In this list.",
        "start": 3010610,
        "end": 3011490,
        "speaker": "A"
      },
      {
        "sid": "s000513",
        "text": "There is no but just this list alone.",
        "start": 3012930,
        "end": 3016450,
        "speaker": "A"
      },
      {
        "sid": "s000514",
        "text": "There is no relationship between these and C. Even if there was an A between them, this doesn't show that.",
        "start": 3016690,
        "end": 3024540,
        "speaker": "A"
      },
      {
        "sid": "s000515",
        "text": "Then I go to B.",
        "start": 3025180,
        "end": 3026540,
        "speaker": "A"
      },
      {
        "sid": "s000516",
        "text": "That's connected to what?",
        "start": 3027020,
        "end": 3029620,
        "speaker": "A"
      },
      {
        "sid": "s000517",
        "text": "Is B connected to anybody?",
        "start": 3029620,
        "end": 3034700,
        "speaker": "A"
      },
      {
        "sid": "s000518",
        "text": "Sorry, just B, not A.",
        "start": 3036700,
        "end": 3039980,
        "speaker": "A"
      },
      {
        "sid": "s000519",
        "text": "Right?",
        "start": 3040860,
        "end": 3041260,
        "speaker": "A"
      },
      {
        "sid": "s000520",
        "text": "Because is A Connected to B, not B connected to A.",
        "start": 3041260,
        "end": 3045340,
        "speaker": "A"
      },
      {
        "sid": "s000521",
        "text": "With directed graph, that's important.",
        "start": 3045580,
        "end": 3047340,
        "speaker": "A"
      },
      {
        "sid": "s000522",
        "text": "If it was not directed, then B would have been connected both to A and D. So B is connected to D. C is connected to E and E D is connected to nothing.",
        "start": 3047820,
        "end": 3067180,
        "speaker": "A"
      },
      {
        "sid": "s000523",
        "text": "E is connected to nothing.",
        "start": 3067260,
        "end": 3068940,
        "speaker": "A"
      },
      {
        "sid": "s000524",
        "text": "This is the linked list representation, right?",
        "start": 3069100,
        "end": 3074790,
        "speaker": "A"
      },
      {
        "sid": "s000525",
        "text": "So if I give you this list, you can draw the graph.",
        "start": 3075350,
        "end": 3079990,
        "speaker": "A"
      },
      {
        "sid": "s000526",
        "text": "If I give you the graph, you can draw this.",
        "start": 3080310,
        "end": 3082750,
        "speaker": "A"
      },
      {
        "sid": "s000527",
        "text": "So this is one way to represent a directed graph.",
        "start": 3082750,
        "end": 3086310,
        "speaker": "A"
      },
      {
        "sid": "s000528",
        "text": "Another way to represent a graph defined by a matrix.",
        "start": 3088470,
        "end": 3092310,
        "speaker": "A"
      },
      {
        "sid": "s000529",
        "text": "You have A, B, C, D tangent rows of the matrix A, B, C, D, E is going to be columns of the matrix.",
        "start": 3092710,
        "end": 3104040,
        "speaker": "A"
      },
      {
        "sid": "s000530",
        "text": "Each entry is going to be 0 or 1.",
        "start": 3104600,
        "end": 3108280,
        "speaker": "A"
      },
      {
        "sid": "s000531",
        "text": "Zero means an edge doesn't exist from B to C. It's always from rows to columns, not vice versa.",
        "start": 3110040,
        "end": 3119000,
        "speaker": "A"
      },
      {
        "sid": "s000532",
        "text": "So A1 here means B is connected to C in a directed graph.",
        "start": 3119160,
        "end": 3129330,
        "speaker": "A"
      },
      {
        "sid": "s000533",
        "text": "If a graph is not connected is not directed, then BC is the same as cb.",
        "start": 3133170,
        "end": 3140290,
        "speaker": "A"
      },
      {
        "sid": "s000534",
        "text": "Therefore, this matrix becomes symmetric in an undirected graph.",
        "start": 3141570,
        "end": 3146930,
        "speaker": "A"
      },
      {
        "sid": "s000535",
        "text": "Because if you have a 1 between B and C, you must have a 1 between C and B.",
        "start": 3146930,
        "end": 3152890,
        "speaker": "A"
      },
      {
        "sid": "s000536",
        "text": "But in a directed graph that's not the case.",
        "start": 3153370,
        "end": 3155850,
        "speaker": "A"
      },
      {
        "sid": "s000537",
        "text": "It's not a symmetric matrix.01 matrix.",
        "start": 3157130,
        "end": 3161210,
        "speaker": "A"
      },
      {
        "sid": "s000538",
        "text": "Okay, so when you are analyzing your algorithm, you want to say I'm using a linked Lister representation or I'm using a matrix representation.",
        "start": 3164730,
        "end": 3177460,
        "speaker": "A"
      },
      {
        "sid": "s000539",
        "text": "Generally a linked list representation is a lot more compact because suppose you have 10 by 10 matrix hundred entries and you have only three edges.",
        "start": 3180020,
        "end": 3196100,
        "speaker": "A"
      },
      {
        "sid": "s000540",
        "text": "You put three ones here, but you gotta have 97 zeros.",
        "start": 3196820,
        "end": 3201710,
        "speaker": "A"
      },
      {
        "sid": "s000541",
        "text": "That's a lot of inefficient use of memory.",
        "start": 3201790,
        "end": 3205390,
        "speaker": "A"
      },
      {
        "sid": "s000542",
        "text": "Whereas here the number of nick you put is equal to the number of edges, so about three of them.",
        "start": 3206030,
        "end": 3211950,
        "speaker": "A"
      },
      {
        "sid": "s000543",
        "text": "So that's the pros and cons.",
        "start": 3213310,
        "end": 3215070,
        "speaker": "A"
      },
      {
        "sid": "s000544",
        "text": "On the other hand, if I want to ask is there an edge between B and C?",
        "start": 3216990,
        "end": 3222470,
        "speaker": "A"
      },
      {
        "sid": "s000545",
        "text": "I go to that entry and in constant time I know the answer.",
        "start": 3222470,
        "end": 3227120,
        "speaker": "A"
      },
      {
        "sid": "s000546",
        "text": "If I want to know, is there an edge between B and C?",
        "start": 3227760,
        "end": 3230840,
        "speaker": "A"
      },
      {
        "sid": "s000547",
        "text": "I'm going to start from B and go through the entire list to see if I ever see C or not.",
        "start": 3230840,
        "end": 3238320,
        "speaker": "A"
      },
      {
        "sid": "s000548",
        "text": "So it could take linear time to know if an edge exists.",
        "start": 3238880,
        "end": 3242880,
        "speaker": "A"
      },
      {
        "sid": "s000549",
        "text": "So more compact, slow searching for an edge, less compact, very fast search.",
        "start": 3243680,
        "end": 3252140,
        "speaker": "A"
      },
      {
        "sid": "s000550",
        "text": "Like it all depends on your problem structure.",
        "start": 3252140,
        "end": 3257980,
        "speaker": "A"
      },
      {
        "sid": "s000551",
        "text": "If your graph is known to have a lot of edges, you may want to use this structure.",
        "start": 3258300,
        "end": 3264700,
        "speaker": "A"
      },
      {
        "sid": "s000552",
        "text": "If your graph is known not to have many edges, you may want to use this structure.",
        "start": 3265100,
        "end": 3270620,
        "speaker": "A"
      },
      {
        "sid": "s000553",
        "text": "But we will practice with that and we'll see what fits when.",
        "start": 3270700,
        "end": 3274140,
        "speaker": "A"
      },
      {
        "sid": "s000554",
        "text": "Okay, so how do I find sources in the graph?",
        "start": 3277190,
        "end": 3282390,
        "speaker": "A"
      },
      {
        "sid": "s000555",
        "text": "So Again, these two are referred to as matrix representation or linked list representation of a graph.",
        "start": 3287670,
        "end": 3294790,
        "speaker": "A"
      },
      {
        "sid": "s000556",
        "text": "In the exam, in the homework, if you tell me I'm using a linked list representation, I know what you're talking about.",
        "start": 3296230,
        "end": 3302470,
        "speaker": "A"
      },
      {
        "sid": "s000557",
        "text": "If you say I'm using matrix representation, I know what you mean.",
        "start": 3303040,
        "end": 3306320,
        "speaker": "A"
      },
      {
        "sid": "s000558",
        "text": "You don't need to define all of these.",
        "start": 3306640,
        "end": 3309120,
        "speaker": "A"
      },
      {
        "sid": "s000559",
        "text": "Okay, I go to every vertex in the linked list or matrix, let's say the linked list index, linked list.",
        "start": 3313920,
        "end": 3329450,
        "speaker": "A"
      },
      {
        "sid": "s000560",
        "text": "I have X, Y, which means there is an edge from X to Y.",
        "start": 3329450,
        "end": 3336250,
        "speaker": "A"
      },
      {
        "sid": "s000561",
        "text": "There is an edge from X to Z.",
        "start": 3336650,
        "end": 3339210,
        "speaker": "A"
      },
      {
        "sid": "s000562",
        "text": "That's all this link list tells me.",
        "start": 3339210,
        "end": 3341450,
        "speaker": "A"
      },
      {
        "sid": "s000563",
        "text": "Doesn't tell me anything between Y and Z.",
        "start": 3341610,
        "end": 3346730,
        "speaker": "A"
      },
      {
        "sid": "s000564",
        "text": "If I want to know is there an edge between Y and Z?",
        "start": 3347050,
        "end": 3350010,
        "speaker": "A"
      },
      {
        "sid": "s000565",
        "text": "I need to go to Y and Z.",
        "start": 3350010,
        "end": 3351850,
        "speaker": "A"
      },
      {
        "sid": "s000566",
        "text": "So I go to every link here, meaning every edge.",
        "start": 3355060,
        "end": 3359700,
        "speaker": "A"
      },
      {
        "sid": "s000567",
        "text": "And then I see a vertex, let's say X, I see how many vertices come after one.",
        "start": 3360740,
        "end": 3370340,
        "speaker": "A"
      },
      {
        "sid": "s000568",
        "text": "I set the odds degree equal to that many numbers and those are connected to Y and Z.",
        "start": 3371060,
        "end": 3386130,
        "speaker": "A"
      },
      {
        "sid": "s000569",
        "text": "So when I see X is going to Y, I take the in degree of Y and add one to it.",
        "start": 3389490,
        "end": 3399570,
        "speaker": "A"
      },
      {
        "sid": "s000570",
        "text": "Maybe there was something before cy that means in degree of Y is one.",
        "start": 3400370,
        "end": 3407630,
        "speaker": "A"
      },
      {
        "sid": "s000571",
        "text": "So far.",
        "start": 3407710,
        "end": 3408350,
        "speaker": "A"
      },
      {
        "sid": "s000572",
        "text": "After seeing this, after seeing that, I add one more to in degree of Y.",
        "start": 3408430,
        "end": 3414030,
        "speaker": "A"
      },
      {
        "sid": "s000573",
        "text": "So for every edge in the linked list, I add one to the in degree and one to the odd degree of some vertices.",
        "start": 3414910,
        "end": 3424670,
        "speaker": "A"
      },
      {
        "sid": "s000574",
        "text": "Is that clear?",
        "start": 3426590,
        "end": 3427550,
        "speaker": "A"
      },
      {
        "sid": "s000575",
        "text": "So by scanning this entire nucleus in any order you want, arbitrary order.",
        "start": 3429950,
        "end": 3436520,
        "speaker": "A"
      },
      {
        "sid": "s000576",
        "text": "For every edge that I see, dhcy, somebody's in degree is going to increase.",
        "start": 3438360,
        "end": 3445080,
        "speaker": "A"
      },
      {
        "sid": "s000577",
        "text": "That's Y.",
        "start": 3445480,
        "end": 3446200,
        "speaker": "A"
      },
      {
        "sid": "s000578",
        "text": "Somebody's odd degree is going to increase.",
        "start": 3446680,
        "end": 3448840,
        "speaker": "A"
      },
      {
        "sid": "s000579",
        "text": "That's C. That's all I have to do, local operation.",
        "start": 3449000,
        "end": 3453160,
        "speaker": "A"
      },
      {
        "sid": "s000580",
        "text": "If I want to know what is the integrity of a vertex X, I don't need to do a bunch of computations.",
        "start": 3454520,
        "end": 3460390,
        "speaker": "A"
      },
      {
        "sid": "s000581",
        "text": "Once I'm done with all these, I will know integrity of everybody.",
        "start": 3460870,
        "end": 3465270,
        "speaker": "A"
      },
      {
        "sid": "s000582",
        "text": "I know odd degree of everybody.",
        "start": 3465510,
        "end": 3467830,
        "speaker": "A"
      },
      {
        "sid": "s000583",
        "text": "And I write that somewhere.",
        "start": 3468790,
        "end": 3470470,
        "speaker": "A"
      },
      {
        "sid": "s000584",
        "text": "So I write these final numbers of in degree next to a note or in a separate structure or whatever way.",
        "start": 3470470,
        "end": 3477750,
        "speaker": "A"
      },
      {
        "sid": "s000585",
        "text": "Minor issue.",
        "start": 3477990,
        "end": 3478790,
        "speaker": "A"
      },
      {
        "sid": "s000586",
        "text": "Okay, Then I go to the that in degree list and I say if in degree our vertex I is 0, then add it to the source list at the end of the algorithm.",
        "start": 3481270,
        "end": 3506010,
        "speaker": "A"
      },
      {
        "sid": "s000587",
        "text": "Not the end of the algorithm, at the end of both, through the entire list.",
        "start": 3506410,
        "end": 3510270,
        "speaker": "A"
      },
      {
        "sid": "s000588",
        "text": "When I'm done, those with in degree zero, I'm going to put it aside, which we had it here in an array, in an linked list, in whatever you like, as long as you are separate from the graph itself.",
        "start": 3510990,
        "end": 3527870,
        "speaker": "A"
      },
      {
        "sid": "s000589",
        "text": "Okay, so I'm done with pro.",
        "start": 3530350,
        "end": 3534970,
        "speaker": "A"
      },
      {
        "sid": "s000590",
        "text": "Remember, when I was describing that all the pre processing needed was to know what the sources are and pick any one of those sources.",
        "start": 3536240,
        "end": 3547360,
        "speaker": "A"
      },
      {
        "sid": "s000591",
        "text": "So now that I'm done, now that I have the source list, now I enter the main body of the algorithm, the main loop of the algorithm.",
        "start": 3548800,
        "end": 3560480,
        "speaker": "A"
      },
      {
        "sid": "s000592",
        "text": "I get a source.",
        "start": 3560730,
        "end": 3562090,
        "speaker": "A"
      },
      {
        "sid": "s000593",
        "text": "I argue that source.",
        "start": 3569610,
        "end": 3571450,
        "speaker": "A"
      },
      {
        "sid": "s000594",
        "text": "So it goes like this.",
        "start": 3572090,
        "end": 3574170,
        "speaker": "A"
      },
      {
        "sid": "s000595",
        "text": "Get a source I R to join the I delete.",
        "start": 3576890,
        "end": 3587300,
        "speaker": "A"
      },
      {
        "sid": "s000596",
        "text": "You don't need to explicitly delete.",
        "start": 3587300,
        "end": 3589860,
        "speaker": "A"
      },
      {
        "sid": "s000597",
        "text": "I change in degrees, add vertices and in degrees to the source list.",
        "start": 3591860,
        "end": 3621470,
        "speaker": "A"
      },
      {
        "sid": "s000598",
        "text": "That's the main loop of the algorithm.",
        "start": 3624430,
        "end": 3626830,
        "speaker": "A"
      },
      {
        "sid": "s000599",
        "text": "So you repeat this N times N being the number of vertices.",
        "start": 3628270,
        "end": 3633070,
        "speaker": "A"
      },
      {
        "sid": "s000600",
        "text": "Every time you get a source, you output that.",
        "start": 3633790,
        "end": 3636510,
        "speaker": "A"
      },
      {
        "sid": "s000601",
        "text": "What you are preparing everything for other vertices.",
        "start": 3637320,
        "end": 3641560,
        "speaker": "A"
      },
      {
        "sid": "s000602",
        "text": "So remember, that's exactly what we did here.",
        "start": 3642440,
        "end": 3645000,
        "speaker": "A"
      },
      {
        "sid": "s000603",
        "text": "I take I, I output that, then say J and K, they have certain in degree.",
        "start": 3645000,
        "end": 3655240,
        "speaker": "A"
      },
      {
        "sid": "s000604",
        "text": "I decrement their in degree by 1.",
        "start": 3656280,
        "end": 3659560,
        "speaker": "A"
      },
      {
        "sid": "s000605",
        "text": "Why?",
        "start": 3660440,
        "end": 3660840,
        "speaker": "A"
      },
      {
        "sid": "s000606",
        "text": "Because of I, I doesn't exist anymore, so to speak.",
        "start": 3661080,
        "end": 3664740,
        "speaker": "A"
      },
      {
        "sid": "s000607",
        "text": "So I'm updating the in degree, assuming I doesn't exist.",
        "start": 3666980,
        "end": 3672980,
        "speaker": "A"
      },
      {
        "sid": "s000608",
        "text": "Why?",
        "start": 3673060,
        "end": 3673460,
        "speaker": "A"
      },
      {
        "sid": "s000609",
        "text": "Because once the n degree of this becomes zero, I want to add it to the source list.",
        "start": 3673780,
        "end": 3678900,
        "speaker": "A"
      },
      {
        "sid": "s000610",
        "text": "That's my main goal.",
        "start": 3679220,
        "end": 3680660,
        "speaker": "A"
      },
      {
        "sid": "s000611",
        "text": "I don't want to wait till it becomes a source to add it to the source list because it's going to take a lot of time.",
        "start": 3681060,
        "end": 3689440,
        "speaker": "A"
      },
      {
        "sid": "s000612",
        "text": "It won't be good for time complexity.",
        "start": 3690150,
        "end": 3692310,
        "speaker": "A"
      },
      {
        "sid": "s000613",
        "text": "Okay, and you keep doing that while there exists a source.",
        "start": 3696390,
        "end": 3701110,
        "speaker": "A"
      },
      {
        "sid": "s000614",
        "text": "While there is a source.",
        "start": 3704550,
        "end": 3706070,
        "speaker": "A"
      },
      {
        "sid": "s000615",
        "text": "So n times.",
        "start": 3707430,
        "end": 3708790,
        "speaker": "A"
      },
      {
        "sid": "s000616",
        "text": "So I do this thing n times and I'm done.",
        "start": 3709910,
        "end": 3713830,
        "speaker": "A"
      },
      {
        "sid": "s000617",
        "text": "That's the algorithm.",
        "start": 3713830,
        "end": 3714970,
        "speaker": "A"
      },
      {
        "sid": "s000618",
        "text": "So first I prepare the algorithm initialization, which is find all the in degrees and odd degrees and as a result find all the sources.",
        "start": 3716160,
        "end": 3726080,
        "speaker": "A"
      },
      {
        "sid": "s000619",
        "text": "That's before you get into this loop, before you start the main step of your algorithm.",
        "start": 3726400,
        "end": 3732560,
        "speaker": "A"
      },
      {
        "sid": "s000620",
        "text": "Yes, please.",
        "start": 3732560,
        "end": 3733200,
        "speaker": "A"
      },
      {
        "sid": "s000621",
        "text": "I haven't really done any proof that except in here.",
        "start": 3736400,
        "end": 3741610,
        "speaker": "A"
      },
      {
        "sid": "s000622",
        "text": "That's the main proof I've had so far for the main body is whenever I output a source, let's say C, there are C is the source of the rest of the graph.",
        "start": 3741930,
        "end": 3756410,
        "speaker": "A"
      },
      {
        "sid": "s000623",
        "text": "Therefore, any vertices that are output after C will not have an edge component because C is the source.",
        "start": 3759850,
        "end": 3768980,
        "speaker": "A"
      },
      {
        "sid": "s000624",
        "text": "Pictorially, it looks like at C everything else is here.",
        "start": 3769380,
        "end": 3774100,
        "speaker": "A"
      },
      {
        "sid": "s000625",
        "text": "This, everything else goes after C. So the ordering is not going to be violated.",
        "start": 3776180,
        "end": 3783540,
        "speaker": "A"
      },
      {
        "sid": "s000626",
        "text": "That's the main proof that anything I add food is correct because anything that comes after it, these guys will not have an edge coming to C because C is peak.",
        "start": 3786420,
        "end": 3801870,
        "speaker": "A"
      },
      {
        "sid": "s000627",
        "text": "To be the source Suggestion, before reviewing this algorithm on your own, draw a graph with 7, 8 vertices and try it on that graph and ask yourself, why am I outputting this right now?",
        "start": 3802030,
        "end": 3820630,
        "speaker": "A"
      },
      {
        "sid": "s000628",
        "text": "A Lot of the algorithm and proof will fall out of that example that you're doing.",
        "start": 3821270,
        "end": 3826070,
        "speaker": "A"
      },
      {
        "sid": "s000629",
        "text": "Kind of like what I did, the small example, it provided the proof methodology, the algorithm methodology, and I gained better understanding of the algorithm.",
        "start": 3826710,
        "end": 3840070,
        "speaker": "A"
      },
      {
        "sid": "s000630",
        "text": "Then I went to details of the algorithm.",
        "start": 3840230,
        "end": 3842790,
        "speaker": "A"
      },
      {
        "sid": "s000631",
        "text": "Okay, now we need to analyze the time complexity initialization.",
        "start": 3846880,
        "end": 3852400,
        "speaker": "A"
      },
      {
        "sid": "s000632",
        "text": "For every edge, we change one in degree.",
        "start": 3852880,
        "end": 3857760,
        "speaker": "A"
      },
      {
        "sid": "s000633",
        "text": "For example, for this, H cy, I change the in degree of this, I change the odd degree of that.",
        "start": 3859920,
        "end": 3866960,
        "speaker": "A"
      },
      {
        "sid": "s000634",
        "text": "So constant operation, two operations.",
        "start": 3867120,
        "end": 3869690,
        "speaker": "A"
      },
      {
        "sid": "s000635",
        "text": "For every edge, how many edges are there?",
        "start": 3871450,
        "end": 3874330,
        "speaker": "A"
      },
      {
        "sid": "s000636",
        "text": "We normally denote the number of edges by E. So for initialization, meaning find sources I spend over here, each.",
        "start": 3874810,
        "end": 3893850,
        "speaker": "A"
      },
      {
        "sid": "s000637",
        "text": "And I'm going to highlight that because this is one piece of my algorithm.",
        "start": 3894880,
        "end": 3899280,
        "speaker": "A"
      },
      {
        "sid": "s000638",
        "text": "There are other pieces that I need to analyze.",
        "start": 3899280,
        "end": 3902000,
        "speaker": "A"
      },
      {
        "sid": "s000639",
        "text": "Again, I need to add up all the numbers to look at the time complexity of the algorithm.",
        "start": 3902160,
        "end": 3907760,
        "speaker": "A"
      },
      {
        "sid": "s000640",
        "text": "Yes, please.",
        "start": 3910240,
        "end": 3910880,
        "speaker": "A"
      },
      {
        "sid": "s000641",
        "text": "So if there goes I to J, we go to I in J.",
        "start": 3911120,
        "end": 3915120,
        "speaker": "A"
      },
      {
        "sid": "s000642",
        "text": "Correct?",
        "start": 3916000,
        "end": 3916480,
        "speaker": "A"
      },
      {
        "sid": "s000643",
        "text": "Exactly right.",
        "start": 3916480,
        "end": 3917280,
        "speaker": "A"
      },
      {
        "sid": "s000644",
        "text": "It's PI kind of is described here.",
        "start": 3918880,
        "end": 3923130,
        "speaker": "A"
      },
      {
        "sid": "s000645",
        "text": "Okay.",
        "start": 3927450,
        "end": 3928090,
        "speaker": "A"
      },
      {
        "sid": "s000646",
        "text": "The rest of those.",
        "start": 3928250,
        "end": 3929370,
        "speaker": "A"
      },
      {
        "sid": "s000647",
        "text": "So this is before we get why there is a source.",
        "start": 3929530,
        "end": 3932570,
        "speaker": "A"
      },
      {
        "sid": "s000648",
        "text": "That's the time complexity here.",
        "start": 3933050,
        "end": 3934970,
        "speaker": "A"
      },
      {
        "sid": "s000649",
        "text": "What about inside that loop, why there is a source?",
        "start": 3936650,
        "end": 3940490,
        "speaker": "A"
      },
      {
        "sid": "s000650",
        "text": "How long does that take to rent?",
        "start": 3941690,
        "end": 3944330,
        "speaker": "A"
      },
      {
        "sid": "s000651",
        "text": "Okay, so for every vertex, when I delete a source source or when I find the source, that's the main loop, how many in degrees do I need to change?",
        "start": 3954100,
        "end": 3984990,
        "speaker": "A"
      },
      {
        "sid": "s000652",
        "text": "That's what the algorithm does, right?",
        "start": 3985870,
        "end": 3987749,
        "speaker": "A"
      },
      {
        "sid": "s000653",
        "text": "It outputs.",
        "start": 3987749,
        "end": 3988670,
        "speaker": "A"
      },
      {
        "sid": "s000654",
        "text": "It deletes a source, a current source, and goes through all of these and decrements their index.",
        "start": 3988670,
        "end": 3996590,
        "speaker": "A"
      },
      {
        "sid": "s000655",
        "text": "Correct.",
        "start": 3996990,
        "end": 3997630,
        "speaker": "A"
      },
      {
        "sid": "s000656",
        "text": "One by one, how many vertices are here at most?",
        "start": 3998320,
        "end": 4004800,
        "speaker": "A"
      },
      {
        "sid": "s000657",
        "text": "N minus one.",
        "start": 4006960,
        "end": 4008160,
        "speaker": "A"
      },
      {
        "sid": "s000658",
        "text": "Right.",
        "start": 4008640,
        "end": 4009040,
        "speaker": "A"
      },
      {
        "sid": "s000659",
        "text": "Which is odd.",
        "start": 4009760,
        "end": 4010640,
        "speaker": "A"
      },
      {
        "sid": "s000660",
        "text": "So this is n minus one operations decrementing in degrees, n minus one such operation.",
        "start": 4010960,
        "end": 4027290,
        "speaker": "A"
      },
      {
        "sid": "s000661",
        "text": "For any vertex S, how many vertices are there in the entire algorithm?",
        "start": 4027450,
        "end": 4035530,
        "speaker": "A"
      },
      {
        "sid": "s000662",
        "text": "N of N. Therefore, updating all the in degrees takes n times n minus 1, which is order of n squared, to change all the in degrees in the entire algorithm, right?",
        "start": 4035850,
        "end": 4056580,
        "speaker": "A"
      },
      {
        "sid": "s000663",
        "text": "Yeah.",
        "start": 4061060,
        "end": 4061620,
        "speaker": "A"
      },
      {
        "sid": "s000664",
        "text": "If like one of the sources has a connection to n minus 1 nodes, then deleting that source will end up algorithm like in the next iteration, this process won't repeat like 10 many times.",
        "start": 4063300,
        "end": 4079570,
        "speaker": "A"
      },
      {
        "sid": "s000665",
        "text": "Right.",
        "start": 4079730,
        "end": 4080130,
        "speaker": "A"
      },
      {
        "sid": "s000666",
        "text": "So, observation.",
        "start": 4080450,
        "end": 4081570,
        "speaker": "A"
      },
      {
        "sid": "s000667",
        "text": "This is correct because I have order N and what I said is correct at most.",
        "start": 4081970,
        "end": 4088850,
        "speaker": "A"
      },
      {
        "sid": "s000668",
        "text": "Remember I said at most you change n minus 1.",
        "start": 4089010,
        "end": 4092770,
        "speaker": "A"
      },
      {
        "sid": "s000669",
        "text": "Right?",
        "start": 4093810,
        "end": 4094210,
        "speaker": "A"
      },
      {
        "sid": "s000670",
        "text": "Correct.",
        "start": 4094450,
        "end": 4095010,
        "speaker": "A"
      },
      {
        "sid": "s000671",
        "text": "So if you say that, I cannot say this is incorrect.",
        "start": 4095010,
        "end": 4099010,
        "speaker": "A"
      },
      {
        "sid": "s000672",
        "text": "It is correct.",
        "start": 4099170,
        "end": 4100130,
        "speaker": "A"
      },
      {
        "sid": "s000673",
        "text": "But maybe what you observed and what you were saying about in degrees, you said it's not N minus 1, it's a degree of this.",
        "start": 4100580,
        "end": 4108260,
        "speaker": "A"
      },
      {
        "sid": "s000674",
        "text": "You are both correct.",
        "start": 4108500,
        "end": 4109780,
        "speaker": "A"
      },
      {
        "sid": "s000675",
        "text": "So maybe I'm being pessimistic, which doesn't Mean incorrect, means ineffective.",
        "start": 4110020,
        "end": 4115940,
        "speaker": "A"
      },
      {
        "sid": "s000676",
        "text": "So this is the first time we're gonna see this is a powerful technique.",
        "start": 4117620,
        "end": 4121860,
        "speaker": "A"
      },
      {
        "sid": "s000677",
        "text": "I'm not gonna change any algorithm, I'm gonna change it my accounting method, to do something better than N square.",
        "start": 4122180,
        "end": 4130310,
        "speaker": "A"
      },
      {
        "sid": "s000678",
        "text": "Let me explain.",
        "start": 4131510,
        "end": 4132550,
        "speaker": "A"
      },
      {
        "sid": "s000679",
        "text": "You want to see how much you spend in a month, you want to come up with a budget.",
        "start": 4132790,
        "end": 4137430,
        "speaker": "A"
      },
      {
        "sid": "s000680",
        "text": "You say, okay, on Saturday I go out, I do this and that hundred bucks, right?",
        "start": 4138470,
        "end": 4144390,
        "speaker": "A"
      },
      {
        "sid": "s000681",
        "text": "Therefore the budget I need every month is 30 of that I need 3,000amonth to spend.",
        "start": 4145270,
        "end": 4154400,
        "speaker": "A"
      },
      {
        "sid": "s000682",
        "text": "Is that correct or not?",
        "start": 4155120,
        "end": 4156880,
        "speaker": "A"
      },
      {
        "sid": "s000683",
        "text": "Yes, assuming Saturday is the most expensive.",
        "start": 4156880,
        "end": 4159440,
        "speaker": "A"
      },
      {
        "sid": "s000684",
        "text": "So 3000 budget is correct.",
        "start": 4160240,
        "end": 4163760,
        "speaker": "A"
      },
      {
        "sid": "s000685",
        "text": "But that's an overestimation because Tuesday you probably don't spend hundred bucks, maybe you spend 10 bucks, Wednesday, maybe you spend 12 bucks every Wednesday.",
        "start": 4164080,
        "end": 4174720,
        "speaker": "A"
      },
      {
        "sid": "s000686",
        "text": "So one is to do worst case analysis like that, which is going to give you an upper bound, which is going to be an overestimate of your budget.",
        "start": 4175760,
        "end": 4186970,
        "speaker": "A"
      },
      {
        "sid": "s000687",
        "text": "This is a time budget, same as hundred bucks as a money budget.",
        "start": 4187050,
        "end": 4192450,
        "speaker": "A"
      },
      {
        "sid": "s000688",
        "text": "This is a time budget, same idea, same analysis.",
        "start": 4192450,
        "end": 4196090,
        "speaker": "A"
      },
      {
        "sid": "s000689",
        "text": "So instead of taking hundred dollar, multiplying it by 30, I'm going to do something more average, which is what both of you are hinting at.",
        "start": 4197290,
        "end": 4209070,
        "speaker": "A"
      },
      {
        "sid": "s000690",
        "text": "So let's see how that works.",
        "start": 4209950,
        "end": 4211630,
        "speaker": "A"
      },
      {
        "sid": "s000691",
        "text": "So here, when I say n minus one, it means I'm charging from time complexity point of view.",
        "start": 4212590,
        "end": 4219470,
        "speaker": "A"
      },
      {
        "sid": "s000692",
        "text": "Time complexity is a resource.",
        "start": 4219950,
        "end": 4222030,
        "speaker": "A"
      },
      {
        "sid": "s000693",
        "text": "I'm charging one unit of time.",
        "start": 4222990,
        "end": 4225070,
        "speaker": "A"
      },
      {
        "sid": "s000694",
        "text": "So for every in degree increment, I'm charging one unit of time here, one unit here, et cetera.",
        "start": 4225710,
        "end": 4236790,
        "speaker": "A"
      },
      {
        "sid": "s000695",
        "text": "Okay, Instead of charging it to the vertex, to this, to that, to that, that's what gave me n times n minus 1, I'm going to take this one unit and charge it to the H. It's just different accounting method, same algorithm, same everything, same.",
        "start": 4238230,
        "end": 4261480,
        "speaker": "A"
      },
      {
        "sid": "s000696",
        "text": "I'm not going to touch the code.",
        "start": 4261480,
        "end": 4263880,
        "speaker": "A"
      },
      {
        "sid": "s000697",
        "text": "Even if I had a code, I'm just going to do a different accounting.",
        "start": 4263880,
        "end": 4268880,
        "speaker": "A"
      },
      {
        "sid": "s000698",
        "text": "So instead of saying I'm going to charge you for that in degree decrement, I'm going to say I'm going to charge you age the in degree decrement.",
        "start": 4269600,
        "end": 4278960,
        "speaker": "A"
      },
      {
        "sid": "s000699",
        "text": "You see the difference?",
        "start": 4279280,
        "end": 4280400,
        "speaker": "A"
      },
      {
        "sid": "s000700",
        "text": "Different bucket, different, different counting.",
        "start": 4280960,
        "end": 4283850,
        "speaker": "A"
      },
      {
        "sid": "s000701",
        "text": "So how many times am I going to see this edge in the entire algorithm?",
        "start": 4285770,
        "end": 4291770,
        "speaker": "A"
      },
      {
        "sid": "s000702",
        "text": "Only once.",
        "start": 4291930,
        "end": 4292810,
        "speaker": "A"
      },
      {
        "sid": "s000703",
        "text": "Then I just deleted that.",
        "start": 4293530,
        "end": 4295530,
        "speaker": "A"
      },
      {
        "sid": "s000704",
        "text": "That's the only time I'm going to see this edge and charge something to it, a runtime to it.",
        "start": 4297770,
        "end": 4304250,
        "speaker": "A"
      },
      {
        "sid": "s000705",
        "text": "So every edge is going to be looked at once.",
        "start": 4304570,
        "end": 4307290,
        "speaker": "A"
      },
      {
        "sid": "s000706",
        "text": "How many edges are there?",
        "start": 4307940,
        "end": 4309460,
        "speaker": "A"
      },
      {
        "sid": "s000707",
        "text": "E of N. Therefore all the in degrees correct, it's order of n square.",
        "start": 4309460,
        "end": 4314740,
        "speaker": "A"
      },
      {
        "sid": "s000708",
        "text": "But better than that, it's going to be Order E. So the example you gave, which had N minus 1 edges, this is order of N minus 1.",
        "start": 4314740,
        "end": 4325140,
        "speaker": "A"
      },
      {
        "sid": "s000709",
        "text": "And what you have in terms of degree, it's going to be degree.",
        "start": 4325860,
        "end": 4329300,
        "speaker": "A"
      },
      {
        "sid": "s000710",
        "text": "If it's 10, it's going to be 10.",
        "start": 4329300,
        "end": 4331460,
        "speaker": "A"
      },
      {
        "sid": "s000711",
        "text": "This is a very, very, very important concept.",
        "start": 4333550,
        "end": 4336990,
        "speaker": "A"
      },
      {
        "sid": "s000712",
        "text": "Make it subtle.",
        "start": 4336990,
        "end": 4338110,
        "speaker": "A"
      },
      {
        "sid": "s000713",
        "text": "Same algorithm, same analysis, same data structure, Just different accounting method, which has nothing to do with your code, with your algorithm, Just different way of counting like a hundred bucks per night.",
        "start": 4339870,
        "end": 4354030,
        "speaker": "A"
      },
      {
        "sid": "s000714",
        "text": "I'm going to do further analysis and realize 100 bucks is only for the weekends, the rest is 10 bucks.",
        "start": 4356510,
        "end": 4364050,
        "speaker": "A"
      },
      {
        "sid": "s000715",
        "text": "So I do a more fine grain analysis, I come up with a better estimate.",
        "start": 4365730,
        "end": 4370690,
        "speaker": "A"
      },
      {
        "sid": "s000716",
        "text": "Same thing is going on here.",
        "start": 4371010,
        "end": 4372610,
        "speaker": "A"
      },
      {
        "sid": "s000717",
        "text": "Please make sure you are comfortable with this.",
        "start": 4375090,
        "end": 4377410,
        "speaker": "A"
      },
      {
        "sid": "s000718",
        "text": "A.",
        "start": 4377650,
        "end": 4378050,
        "speaker": "A"
      },
      {
        "sid": "s000719",
        "text": "Of course, it's an important topic of accounting method and we will be using the same idea at least four times in this course for other algorithms.",
        "start": 4378050,
        "end": 4389450,
        "speaker": "A"
      },
      {
        "sid": "s000720",
        "text": "And it's okay that I did this first because I wanted to get partial credit.",
        "start": 4391210,
        "end": 4395610,
        "speaker": "A"
      },
      {
        "sid": "s000721",
        "text": "So I quickly did this.",
        "start": 4395930,
        "end": 4397770,
        "speaker": "A"
      },
      {
        "sid": "s000722",
        "text": "This is a much easier analysis.",
        "start": 4397770,
        "end": 4400010,
        "speaker": "A"
      },
      {
        "sid": "s000723",
        "text": "But then I realized, as both of you realized, wait, this is kind of pessimistic.",
        "start": 4400170,
        "end": 4405530,
        "speaker": "A"
      },
      {
        "sid": "s000724",
        "text": "Let me do something.",
        "start": 4405690,
        "end": 4406810,
        "speaker": "A"
      },
      {
        "sid": "s000725",
        "text": "So I have another order in here for the entirety of the loop, not one loop.",
        "start": 4411700,
        "end": 4417700,
        "speaker": "A"
      },
      {
        "sid": "s000726",
        "text": "So another way of thinking about it is first I try to see what is the runtime of one iteration of the loop.",
        "start": 4417940,
        "end": 4426500,
        "speaker": "A"
      },
      {
        "sid": "s000727",
        "text": "That's what gave me N squared the new way I'm saying what is the runtime for all the loops in the entire algorithm.",
        "start": 4427220,
        "end": 4435620,
        "speaker": "A"
      },
      {
        "sid": "s000728",
        "text": "I change, change my accounting method for the entirety of the algorithm that took me from N squared to E. Now, sometimes E could be as bad as N squared, but normally it's much, much better.",
        "start": 4435620,
        "end": 4452589,
        "speaker": "A"
      },
      {
        "sid": "s000729",
        "text": "But E is always preferred over N squared.",
        "start": 4453550,
        "end": 4457230,
        "speaker": "A"
      },
      {
        "sid": "s000730",
        "text": "We'll see it in a sec.",
        "start": 4457390,
        "end": 4458750,
        "speaker": "A"
      },
      {
        "sid": "s000731",
        "text": "Why?",
        "start": 4458750,
        "end": 4459150,
        "speaker": "A"
      },
      {
        "sid": "s000732",
        "text": "Mainly because E could never be worse than N squared.",
        "start": 4462680,
        "end": 4465960,
        "speaker": "A"
      },
      {
        "sid": "s000733",
        "text": "But many times like a tree structure, as we said earlier, is only n minus 1h.",
        "start": 4466120,
        "end": 4471720,
        "speaker": "A"
      },
      {
        "sid": "s000734",
        "text": "Okay, so the run time of.",
        "start": 4475160,
        "end": 4476840,
        "speaker": "A"
      },
      {
        "sid": "s000735",
        "text": "So when I'm done with all these and I have drawn a box around these at the end, I say T of N comma E N vertices, E edges is order of E. Some people prefer to say it's order of e plus n because when I output the sources, that's n units of time.",
        "start": 4476920,
        "end": 4504039,
        "speaker": "A"
      },
      {
        "sid": "s000736",
        "text": "But it's not necessary to say E plus N. Why?",
        "start": 4504680,
        "end": 4508120,
        "speaker": "A"
      },
      {
        "sid": "s000737",
        "text": "Because N is always less than E in a connected graph.",
        "start": 4508360,
        "end": 4512360,
        "speaker": "A"
      },
      {
        "sid": "s000738",
        "text": "So this is.",
        "start": 4514530,
        "end": 4515490,
        "speaker": "A"
      },
      {
        "sid": "s000739",
        "text": "If I remove that, it's like 2e in the worst case.",
        "start": 4515490,
        "end": 4518850,
        "speaker": "A"
      },
      {
        "sid": "s000740",
        "text": "But some say because it's N comma E, it looks nicer to involve both E and E. What should you do?",
        "start": 4519650,
        "end": 4528610,
        "speaker": "A"
      },
      {
        "sid": "s000741",
        "text": "Whatever you like.",
        "start": 4528610,
        "end": 4529530,
        "speaker": "A"
      },
      {
        "sid": "s000742",
        "text": "They Are both absolutely correct for a connected graph.",
        "start": 4529530,
        "end": 4532450,
        "speaker": "A"
      },
      {
        "sid": "s000743",
        "text": "If the graph is not connected, E and N are totally disjoint.",
        "start": 4532610,
        "end": 4537090,
        "speaker": "A"
      },
      {
        "sid": "s000744",
        "text": "Please.",
        "start": 4537330,
        "end": 4537730,
        "speaker": "A"
      },
      {
        "sid": "s000745",
        "text": "So for the N squared example, you said go through the first one and then delete it.",
        "start": 4538050,
        "end": 4542780,
        "speaker": "A"
      },
      {
        "sid": "s000746",
        "text": "Go through every single.",
        "start": 4542780,
        "end": 4543820,
        "speaker": "A"
      },
      {
        "sid": "s000747",
        "text": "So that's N output.",
        "start": 4544140,
        "end": 4545980,
        "speaker": "A"
      },
      {
        "sid": "s000748",
        "text": "How's it N output?",
        "start": 4545980,
        "end": 4546780,
        "speaker": "A"
      },
      {
        "sid": "s000749",
        "text": "Right.",
        "start": 4547020,
        "end": 4547420,
        "speaker": "A"
      },
      {
        "sid": "s000750",
        "text": "So in the entirety of algorithm, there are N sources.",
        "start": 4547660,
        "end": 4551500,
        "speaker": "A"
      },
      {
        "sid": "s000751",
        "text": "That's where the n comes from.",
        "start": 4552140,
        "end": 4553980,
        "speaker": "A"
      },
      {
        "sid": "s000752",
        "text": "And for each source, I need to change the n degree of maybe n minus one other vertices, that's where n minus one are.",
        "start": 4554380,
        "end": 4564240,
        "speaker": "A"
      },
      {
        "sid": "s000753",
        "text": "So why is it times?",
        "start": 4564550,
        "end": 4565350,
        "speaker": "A"
      },
      {
        "sid": "s000754",
        "text": "Oh, because N iteration of the loop, each loop takes n minus 1 times.",
        "start": 4566070,
        "end": 4570790,
        "speaker": "A"
      },
      {
        "sid": "s000755",
        "text": "So you are repeating something N times inside of it is N minus 1, so you have to multiply.",
        "start": 4571510,
        "end": 4578070,
        "speaker": "A"
      },
      {
        "sid": "s000756",
        "text": "And I call this a pessimistic, not algorithm.",
        "start": 4580390,
        "end": 4584150,
        "speaker": "A"
      },
      {
        "sid": "s000757",
        "text": "These are the same algorithm.",
        "start": 4584150,
        "end": 4585830,
        "speaker": "A"
      },
      {
        "sid": "s000758",
        "text": "It's the same data structure, same everything.",
        "start": 4586230,
        "end": 4588710,
        "speaker": "A"
      },
      {
        "sid": "s000759",
        "text": "This is a pessimistic accounting time complexity analysis.",
        "start": 4589110,
        "end": 4594800,
        "speaker": "A"
      },
      {
        "sid": "s000760",
        "text": "This is a more realistic time complexity analysis.",
        "start": 4594880,
        "end": 4598240,
        "speaker": "A"
      },
      {
        "sid": "s000761",
        "text": "The difference between these two is purely an accounting method, nothing else.",
        "start": 4598960,
        "end": 4604800,
        "speaker": "A"
      },
      {
        "sid": "s000762",
        "text": "Same code event.",
        "start": 4607280,
        "end": 4608400,
        "speaker": "A"
      },
      {
        "sid": "s000763",
        "text": "When you code this, one way to look at it gives you this.",
        "start": 4608480,
        "end": 4613480,
        "speaker": "A"
      },
      {
        "sid": "s000764",
        "text": "Another way to look at it is to that without changing a word of your code.",
        "start": 4613480,
        "end": 4618670,
        "speaker": "A"
      },
      {
        "sid": "s000765",
        "text": "Yes, please.",
        "start": 4618830,
        "end": 4619550,
        "speaker": "A"
      },
      {
        "sid": "s000766",
        "text": "So if every edge is going to get looked at only once before getting deleted, so it can get deleted only once, so the time is actually, why would we add n?",
        "start": 4620350,
        "end": 4630590,
        "speaker": "A"
      },
      {
        "sid": "s000767",
        "text": "We don't.",
        "start": 4632590,
        "end": 4633390,
        "speaker": "A"
      },
      {
        "sid": "s000768",
        "text": "But we could say, by the way, in the entirety of the algorithm, I output N numbers too, so that an additional N it just looks better.",
        "start": 4633710,
        "end": 4644120,
        "speaker": "A"
      },
      {
        "sid": "s000769",
        "text": "Because the algorithm is a function of E and N, both edges and vertices.",
        "start": 4644680,
        "end": 4649640,
        "speaker": "A"
      },
      {
        "sid": "s000770",
        "text": "So some people, some literature, some books say write it like that.",
        "start": 4650200,
        "end": 4655320,
        "speaker": "A"
      },
      {
        "sid": "s000771",
        "text": "So later on, when we deal with graphs that are not connected, we still use the same number.",
        "start": 4655720,
        "end": 4661880,
        "speaker": "A"
      },
      {
        "sid": "s000772",
        "text": "That's all.",
        "start": 4662040,
        "end": 4662760,
        "speaker": "A"
      },
      {
        "sid": "s000773",
        "text": "So if you say order E or if you say order e plus, they are both absolutely precise and correct in a connected graph.",
        "start": 4663240,
        "end": 4673540,
        "speaker": "A"
      },
      {
        "sid": "s000774",
        "text": "Later on, when we have a graph with multiple components, that's a different story.",
        "start": 4674340,
        "end": 4679140,
        "speaker": "A"
      },
      {
        "sid": "s000775",
        "text": "Yes, please.",
        "start": 4679220,
        "end": 4679940,
        "speaker": "A"
      },
      {
        "sid": "s000776",
        "text": "When you're the first, how would you find the next source?",
        "start": 4680100,
        "end": 4686900,
        "speaker": "A"
      },
      {
        "sid": "s000777",
        "text": "So the sources where.",
        "start": 4688260,
        "end": 4689780,
        "speaker": "A"
      },
      {
        "sid": "s000778",
        "text": "That's why we had to go initially and put sources in a separate structure, like an array.",
        "start": 4690020,
        "end": 4695950,
        "speaker": "A"
      },
      {
        "sid": "s000779",
        "text": "So when I delete it, I have a pointer, I advance the pointer or the link list or wherever you store it.",
        "start": 4696190,
        "end": 4702990,
        "speaker": "A"
      },
      {
        "sid": "s000780",
        "text": "So if the sources are in the original graph, every time I have to go through every node and say, is your in degree zero?",
        "start": 4703230,
        "end": 4712830,
        "speaker": "A"
      },
      {
        "sid": "s000781",
        "text": "Is your in degree zero?",
        "start": 4712830,
        "end": 4714110,
        "speaker": "A"
      },
      {
        "sid": "s000782",
        "text": "That takes an additional N unit of time.",
        "start": 4714270,
        "end": 4716830,
        "speaker": "A"
      },
      {
        "sid": "s000783",
        "text": "What do I keep track of them?",
        "start": 4716990,
        "end": 4719280,
        "speaker": "A"
      },
      {
        "sid": "s000784",
        "text": "That's why I did that whole thing.",
        "start": 4719280,
        "end": 4721000,
        "speaker": "A"
      },
      {
        "sid": "s000785",
        "text": "That's why when the n degree becomes zero, I add it to the source list right there and there so I don't have to spend extra time later looking for it.",
        "start": 4721400,
        "end": 4733640,
        "speaker": "A"
      },
      {
        "sid": "s000786",
        "text": "If I do that, then the algorithm becomes N squared and I'm not going to worry about where I'm going to store everything for every part of the algorithm.",
        "start": 4733719,
        "end": 4746130,
        "speaker": "A"
      },
      {
        "sid": "s000787",
        "text": "But here it did matter, so I need to focus and emphasize and highlight it.",
        "start": 4746130,
        "end": 4751210,
        "speaker": "A"
      },
      {
        "sid": "s000788",
        "text": "So topological sort, very important, blah, blah.",
        "start": 4757130,
        "end": 4762010,
        "speaker": "A"
      },
      {
        "sid": "s000789",
        "text": "What I want you to learn from today's lecture is not topological because who cares?",
        "start": 4764810,
        "end": 4770420,
        "speaker": "A"
      },
      {
        "sid": "s000790",
        "text": "And it's available and no one is going to hire you to do topological store because again, it exists, there's code for it, there's algorithms in all sorts of code.",
        "start": 4770740,
        "end": 4781460,
        "speaker": "A"
      },
      {
        "sid": "s000791",
        "text": "It's the methodology that matters.",
        "start": 4781460,
        "end": 4783540,
        "speaker": "A"
      },
      {
        "sid": "s000792",
        "text": "Because this methodology, this concept, this way of attacking a problem, you can do it with many other problems.",
        "start": 4783620,
        "end": 4790180,
        "speaker": "A"
      },
      {
        "sid": "s000793",
        "text": "That's what's valuable.",
        "start": 4790180,
        "end": 4791380,
        "speaker": "A"
      },
      {
        "sid": "s000794",
        "text": "By the way, you also understand topological structure.",
        "start": 4792820,
        "end": 4795870,
        "speaker": "A"
      },
      {
        "sid": "s000795",
        "text": "That's my goal in all the lectures, to see how I attack a problem, kind of high level, coming lower, proving things only as needed or when they are needed, then getting into data structure, then kind of at the end, all the way at the end, I say, oh yeah, by the way, there are two ways of doing your accounting.",
        "start": 4796030,
        "end": 4816030,
        "speaker": "A"
      },
      {
        "sid": "s000796",
        "text": "That comes after your data structure, after your algorithm, after it, there's different way of humping.",
        "start": 4816190,
        "end": 4823560,
        "speaker": "A"
      },
      {
        "sid": "s000797",
        "text": "So that's really the takeaway from today or any other lecture.",
        "start": 4827000,
        "end": 4831400,
        "speaker": "A"
      },
      {
        "sid": "s000798",
        "text": "So maybe I think one mid term problem was design an algorithm that finds a cycle in a graph, in a directed graph.",
        "start": 4847090,
        "end": 4857970,
        "speaker": "A"
      },
      {
        "sid": "s000799",
        "text": "You've never seen that before.",
        "start": 4859570,
        "end": 4860890,
        "speaker": "A"
      },
      {
        "sid": "s000800",
        "text": "I have no idea how to start it.",
        "start": 4860890,
        "end": 4862850,
        "speaker": "A"
      },
      {
        "sid": "s000801",
        "text": "So when you see something like that, you kind of scan stuff that you have done in the class.",
        "start": 4863170,
        "end": 4869410,
        "speaker": "A"
      },
      {
        "sid": "s000802",
        "text": "That sometimes helps.",
        "start": 4871420,
        "end": 4872860,
        "speaker": "A"
      },
      {
        "sid": "s000803",
        "text": "So maybe you realize, oh yeah, I remember that day in October we talked about topological sort that had to do something with cycles because we keep talking about gag, async graph cycles and all that.",
        "start": 4873900,
        "end": 4890260,
        "speaker": "A"
      },
      {
        "sid": "s000804",
        "text": "So maybe that's a good starting point to solve the cycle problem in a graph.",
        "start": 4890260,
        "end": 4895020,
        "speaker": "A"
      },
      {
        "sid": "s000805",
        "text": "So you kind of, kind of try to find a hook to a problem you've never seen before.",
        "start": 4895980,
        "end": 4900550,
        "speaker": "A"
      },
      {
        "sid": "s000806",
        "text": "And that's helpful.",
        "start": 4900790,
        "end": 4901830,
        "speaker": "A"
      },
      {
        "sid": "s000807",
        "text": "And that's how you actually solve that problem.",
        "start": 4901910,
        "end": 4904230,
        "speaker": "A"
      },
      {
        "sid": "s000808",
        "text": "You go through topological sort as I did, you add a few variations to it.",
        "start": 4904630,
        "end": 4910550,
        "speaker": "A"
      },
      {
        "sid": "s000809",
        "text": "Basically I give you the answer for that problem.",
        "start": 4911590,
        "end": 4914390,
        "speaker": "A"
      },
      {
        "sid": "s000810",
        "text": "If you don't have any more sources somewhere in the middle of the algorithm.",
        "start": 4915030,
        "end": 4921830,
        "speaker": "A"
      },
      {
        "sid": "s000811",
        "text": "So you've done, you had emergencies after n over 2, there are no more sources.",
        "start": 4924160,
        "end": 4929360,
        "speaker": "A"
      },
      {
        "sid": "s000812",
        "text": "It means there must be a cycle.",
        "start": 4929760,
        "end": 4931840,
        "speaker": "A"
      },
      {
        "sid": "s000813",
        "text": "So cycle finding is this algorithm with one additional test.",
        "start": 4933520,
        "end": 4938480,
        "speaker": "A"
      },
      {
        "sid": "s000814",
        "text": "You need to prove that.",
        "start": 4938560,
        "end": 4939760,
        "speaker": "A"
      },
      {
        "sid": "s000815",
        "text": "If I ask you that question, this is statement that if the Algorithm ends early.",
        "start": 4940080,
        "end": 4945360,
        "speaker": "A"
      },
      {
        "sid": "s000816",
        "text": "There must be a cycle.",
        "start": 4945440,
        "end": 4946920,
        "speaker": "A"
      },
      {
        "sid": "s000817",
        "text": "You prove that and the rest of it is the same.",
        "start": 4946920,
        "end": 4949960,
        "speaker": "A"
      },
      {
        "sid": "s000818",
        "text": "Remember topological source.",
        "start": 4949960,
        "end": 4951680,
        "speaker": "A"
      },
      {
        "sid": "s000819",
        "text": "The rest of my algorithm is the same, except I add here that if you output the number of sources I output total is less than n. There must be a cycle.",
        "start": 4951680,
        "end": 4966600,
        "speaker": "A"
      },
      {
        "sid": "s000820",
        "text": "You add or stop the algorithm.",
        "start": 4966600,
        "end": 4970920,
        "speaker": "A"
      },
      {
        "sid": "s000821",
        "text": "So with that additional state and proving which you kind of almost proved it here today, you do the additional proof that solves that problem without any extra work.",
        "start": 4971640,
        "end": 4984690,
        "speaker": "A"
      },
      {
        "sid": "s000822",
        "text": "So knowing this problem will help you in many other problems.",
        "start": 4985890,
        "end": 4990210,
        "speaker": "A"
      },
      {
        "sid": "s000823",
        "text": "Some of them directly because the answer to cycle is just topological, some of them indirectly in that destro structure of another problem might be exactly.",
        "start": 4990370,
        "end": 5002540,
        "speaker": "A"
      },
      {
        "sid": "s000824",
        "text": "The problem might be different, solution might be different, but the idea and the structure might be exactly that.",
        "start": 5003100,
        "end": 5009420,
        "speaker": "A"
      },
      {
        "sid": "s000825",
        "text": "So these are the takeaway from the lectures.",
        "start": 5009740,
        "end": 5012300,
        "speaker": "A"
      },
      {
        "sid": "s000826",
        "text": "Not topological sort by itself, because who cares?",
        "start": 5013180,
        "end": 5016380,
        "speaker": "A"
      },
      {
        "sid": "s000827",
        "text": "Not any topic that we study in this class, because who cares if Google wants to know the answer to topological sources, they open a book.",
        "start": 5016620,
        "end": 5026310,
        "speaker": "A"
      },
      {
        "sid": "s000828",
        "text": "That's the answer.",
        "start": 5026310,
        "end": 5027350,
        "speaker": "A"
      },
      {
        "sid": "s000829",
        "text": "It's not you that's gonna do it.",
        "start": 5027510,
        "end": 5029430,
        "speaker": "A"
      },
      {
        "sid": "s000830",
        "text": "If they want to call it, they give it to ChatGPT or something.",
        "start": 5029670,
        "end": 5033670,
        "speaker": "A"
      },
      {
        "sid": "s000831",
        "text": "So that's not where your value is.",
        "start": 5033910,
        "end": 5036070,
        "speaker": "A"
      },
      {
        "sid": "s000832",
        "text": "Your value is a brand new problem that you find a connection to some existing problem or you come up with a brand new solution based on the methodologies and techniques you have learned in this class.",
        "start": 5036790,
        "end": 5051860,
        "speaker": "A"
      },
      {
        "sid": "s000833",
        "text": "That's what's going to be valuable.",
        "start": 5052180,
        "end": 5053860,
        "speaker": "A"
      },
      {
        "sid": "s000834",
        "text": "That has always been kind of true, but more so in the next five to 10 years because of all the changes.",
        "start": 5054420,
        "end": 5062100,
        "speaker": "A"
      },
      {
        "sid": "s000835",
        "text": "Trust me on that.",
        "start": 5063620,
        "end": 5064740,
        "speaker": "A"
      },
      {
        "sid": "s000836",
        "text": "There are a lot of discussion in various computer science departments around the country that we need to have more of these rigorous topics in our curriculum.",
        "start": 5068820,
        "end": 5082590,
        "speaker": "A"
      },
      {
        "sid": "s000837",
        "text": "Because at the end that's what's fine.",
        "start": 5083710,
        "end": 5085710,
        "speaker": "A"
      },
      {
        "sid": "s000838",
        "text": "And there are deep reasons for that, as we believe that.",
        "start": 5086750,
        "end": 5090110,
        "speaker": "A"
      },
      {
        "sid": "s000839",
        "text": "But for now let's just go with it.",
        "start": 5090830,
        "end": 5093950,
        "speaker": "A"
      },
      {
        "sid": "s000840",
        "text": "Okay?",
        "start": 5097230,
        "end": 5097790,
        "speaker": "A"
      },
      {
        "sid": "s000841",
        "text": "So again, at some point those who close nodes recreate all these, even some stuff that I forgot to mention.",
        "start": 5098430,
        "end": 5107830,
        "speaker": "A"
      },
      {
        "sid": "s000842",
        "text": "As you are writing, you say, oh wait, that data structure we didn't complete, let me complete it.",
        "start": 5107910,
        "end": 5113270,
        "speaker": "A"
      },
      {
        "sid": "s000843",
        "text": "I do that on purpose.",
        "start": 5113270,
        "end": 5114630,
        "speaker": "A"
      },
      {
        "sid": "s000844",
        "text": "There are some missing links here.",
        "start": 5114630,
        "end": 5116630,
        "speaker": "A"
      },
      {
        "sid": "s000845",
        "text": "I don't describe everything because I want you to describe it.",
        "start": 5116950,
        "end": 5120430,
        "speaker": "A"
      },
      {
        "sid": "s000846",
        "text": "It is a network, but it's better if you discover it.",
        "start": 5120430,
        "end": 5123750,
        "speaker": "A"
      },
      {
        "sid": "s000847",
        "text": "And that means you truly learn.",
        "start": 5124630,
        "end": 5126550,
        "speaker": "A"
      },
      {
        "sid": "s000848",
        "text": "And homework one is do tomorrow with a final.",
        "start": 5128160,
        "end": 5131120,
        "speaker": "A"
      },
      {
        "sid": "s000849",
        "text": "Yeah, yeah.",
        "start": 5140480,
        "end": 5146400,
        "speaker": "A"
      }
    ],
    "context_after_main_text": []
  }
]