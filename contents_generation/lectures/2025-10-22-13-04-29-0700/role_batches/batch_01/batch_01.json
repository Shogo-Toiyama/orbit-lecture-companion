[
  {
    "context_before_main_text": [],
    "main_text": [
      {
        "sid": "s000001",
        "text": "And if you recall, once we do breadth first search, remember the layer number of a vertex, that's actually the distance to the source.",
        "start": 2080,
        "end": 12240,
        "speaker": "A"
      },
      {
        "sid": "s000002",
        "text": "Now if a graph is weighted, let's say as such, this is your source or your starting point.",
        "start": 14080,
        "end": 33530,
        "speaker": "A"
      },
      {
        "sid": "s000003",
        "text": "Then if we would have done breadth first search and or breadth first search tree, then we would figure that the distance from S To h is 1, 8 or 1 link.",
        "start": 34730,
        "end": 49530,
        "speaker": "A"
      },
      {
        "sid": "s000004",
        "text": "So we would say this is 1, this is 1, this is 1A, 2.",
        "start": 52260,
        "end": 56660,
        "speaker": "A"
      },
      {
        "sid": "s000005",
        "text": "So to see the distance would be 2, 2 edges, 2 lengths, as if.",
        "start": 56660,
        "end": 63140,
        "speaker": "A"
      },
      {
        "sid": "s000006",
        "text": "And that works when the graph is not weighted.",
        "start": 63380,
        "end": 66180,
        "speaker": "A"
      },
      {
        "sid": "s000007",
        "text": "Now if you modify the definition of a shortest path, which means not the number of edges, not the number of links, for the sum of the weight of on those edges, that's what we call shortest path.",
        "start": 66580,
        "end": 81050,
        "speaker": "A"
      },
      {
        "sid": "s000008",
        "text": "In a weighted graph of this nature.",
        "start": 81450,
        "end": 84850,
        "speaker": "A"
      },
      {
        "sid": "s000009",
        "text": "This is an example of so in that the shortest path, the total weight from S to B is 1, from S to C is 2, and from S to A is not 10 is 1 to the 3, some of these numbers.",
        "start": 84850,
        "end": 104660,
        "speaker": "A"
      },
      {
        "sid": "s000010",
        "text": "Okay, so join.",
        "start": 111460,
        "end": 113220,
        "speaker": "A"
      },
      {
        "sid": "s000011",
        "text": "So that's how we define weight of a path on a H. And the question is, how can we solve that?",
        "start": 113940,
        "end": 122740,
        "speaker": "A"
      },
      {
        "sid": "s000012",
        "text": "Obviously breadth first search and breadth first related searches is not going to work because that only deals with the number of edges.",
        "start": 123140,
        "end": 133140,
        "speaker": "A"
      },
      {
        "sid": "s000013",
        "text": "So anything to do with leveling, etc.",
        "start": 134660,
        "end": 137860,
        "speaker": "A"
      },
      {
        "sid": "s000014",
        "text": "It just won't work.",
        "start": 137860,
        "end": 138980,
        "speaker": "A"
      },
      {
        "sid": "s000015",
        "text": "And the weights could be the cost of a lake.",
        "start": 139780,
        "end": 143540,
        "speaker": "A"
      },
      {
        "sid": "s000016",
        "text": "For example, if you can take trains or cars or planes, that could be it.",
        "start": 145060,
        "end": 150460,
        "speaker": "A"
      },
      {
        "sid": "s000017",
        "text": "And you may be asking for the minimum cost at from a given point to another point or instead of all other points.",
        "start": 150460,
        "end": 159230,
        "speaker": "A"
      },
      {
        "sid": "s000018",
        "text": "Usually that was true also for unweighted case.",
        "start": 160510,
        "end": 164590,
        "speaker": "A"
      },
      {
        "sid": "s000019",
        "text": "When I want to find single source, single destination, shortest path.",
        "start": 165150,
        "end": 171550,
        "speaker": "A"
      },
      {
        "sid": "s000020",
        "text": "So one source, one destination for free I get the solution to single source, multiple destination.",
        "start": 171870,
        "end": 181150,
        "speaker": "A"
      },
      {
        "sid": "s000021",
        "text": "So all other destination I get the distances for free.",
        "start": 182190,
        "end": 185950,
        "speaker": "A"
      },
      {
        "sid": "s000022",
        "text": "That is, the two algorithms are pretty much the same.",
        "start": 186110,
        "end": 189070,
        "speaker": "A"
      },
      {
        "sid": "s000023",
        "text": "That was true for unweighted, and here it might be true.",
        "start": 190030,
        "end": 194910,
        "speaker": "A"
      },
      {
        "sid": "s000024",
        "text": "We shall see.",
        "start": 194910,
        "end": 195870,
        "speaker": "A"
      },
      {
        "sid": "s000025",
        "text": "So the problem that we are looking at is the minimum weight path or minimum distance path on a weighted graph.",
        "start": 197790,
        "end": 206510,
        "speaker": "A"
      },
      {
        "sid": "s000026",
        "text": "And weights in general can be on vertices or edges.",
        "start": 206830,
        "end": 211120,
        "speaker": "A"
      },
      {
        "sid": "s000027",
        "text": "Now we are considering the case where the weight is going to be on the edges.",
        "start": 211520,
        "end": 216640,
        "speaker": "A"
      },
      {
        "sid": "s000028",
        "text": "So for now, for today, only the edges are weighted.",
        "start": 217440,
        "end": 222160,
        "speaker": "A"
      },
      {
        "sid": "s000029",
        "text": "So the problem is find the shortest path, the minimum weight path from S to all other vertices.",
        "start": 225600,
        "end": 235190,
        "speaker": "A"
      },
      {
        "sid": "s000030",
        "text": "And the solution for this example is shown.",
        "start": 236630,
        "end": 239830,
        "speaker": "A"
      },
      {
        "sid": "s000031",
        "text": "1, 2 and 3 is the problem statement here.",
        "start": 240150,
        "end": 246710,
        "speaker": "A"
      },
      {
        "sid": "s000032",
        "text": "That's the first thing you want to ask whenever you see a problem.",
        "start": 247430,
        "end": 251430,
        "speaker": "A"
      },
      {
        "sid": "s000033",
        "text": "Are we hundred percent comfortable?",
        "start": 252390,
        "end": 254430,
        "speaker": "A"
      },
      {
        "sid": "s000034",
        "text": "We understand the problem?",
        "start": 254430,
        "end": 256070,
        "speaker": "A"
      },
      {
        "sid": "s000035",
        "text": "Are there ambiguities These are the kind of thing you want to ask yourself when you see a problem for the first time.",
        "start": 256630,
        "end": 264960,
        "speaker": "A"
      },
      {
        "sid": "s000036",
        "text": "Because one little wrong assumption, that will change a problem entirely.",
        "start": 266240,
        "end": 272960,
        "speaker": "A"
      },
      {
        "sid": "s000037",
        "text": "And because of that, with very high probability, whatever solution you come up with is incorrect because it's for a different problem.",
        "start": 273440,
        "end": 282880,
        "speaker": "A"
      },
      {
        "sid": "s000038",
        "text": "So I will say, say that every time because it matters.",
        "start": 283600,
        "end": 287850,
        "speaker": "A"
      },
      {
        "sid": "s000039",
        "text": "Understanding the problem is important.",
        "start": 288250,
        "end": 290330,
        "speaker": "A"
      },
      {
        "sid": "s000040",
        "text": "Do a few examples on the side, see if it makes sense.",
        "start": 291050,
        "end": 295130,
        "speaker": "A"
      },
      {
        "sid": "s000041",
        "text": "If there are, try to come up with exceptions or things that makes this problem difficult.",
        "start": 296570,
        "end": 303450,
        "speaker": "A"
      },
      {
        "sid": "s000042",
        "text": "Is it that the weights are not equal to unit weights the same way?",
        "start": 303930,
        "end": 309050,
        "speaker": "A"
      },
      {
        "sid": "s000043",
        "text": "Or is it something, something else?",
        "start": 309450,
        "end": 311140,
        "speaker": "A"
      },
      {
        "sid": "s000044",
        "text": "Okay, so always go through these few minutes of exercise with yourself of do I understand the problem?",
        "start": 314100,
        "end": 322420,
        "speaker": "A"
      },
      {
        "sid": "s000045",
        "text": "Do a few examples.",
        "start": 324340,
        "end": 325700,
        "speaker": "A"
      },
      {
        "sid": "s000046",
        "text": "When you do examples and you try to get deeper into the problem, that will probably give you hints on how to solve the problem or some initial hint.",
        "start": 325700,
        "end": 336490,
        "speaker": "A"
      },
      {
        "sid": "s000047",
        "text": "So those are all good things.",
        "start": 336720,
        "end": 338000,
        "speaker": "A"
      },
      {
        "sid": "s000048",
        "text": "So it's not time wasted.",
        "start": 338160,
        "end": 339840,
        "speaker": "A"
      },
      {
        "sid": "s000049",
        "text": "Especially when you have limited time, like in exams and interviews, we immediately want to give a solution that's not a good idea.",
        "start": 340080,
        "end": 350720,
        "speaker": "A"
      },
      {
        "sid": "s000050",
        "text": "Just sit back, think about the problem, do a few examples.",
        "start": 351200,
        "end": 355280,
        "speaker": "A"
      },
      {
        "sid": "s000051",
        "text": "Only when you feel super comfortable with the problem.",
        "start": 355760,
        "end": 358560,
        "speaker": "A"
      },
      {
        "sid": "s000052",
        "text": "That's the time to even begin thinking about an algorithm solution.",
        "start": 358880,
        "end": 363920,
        "speaker": "A"
      },
      {
        "sid": "s000053",
        "text": "Okay, so even for homework, try to practice solving them in this manner.",
        "start": 366880,
        "end": 372320,
        "speaker": "A"
      },
      {
        "sid": "s000054",
        "text": "Don't think that I have only 10 minutes for a problem.",
        "start": 374000,
        "end": 376960,
        "speaker": "A"
      },
      {
        "sid": "s000055",
        "text": "Time is going to be off.",
        "start": 377520,
        "end": 378880,
        "speaker": "A"
      },
      {
        "sid": "s000056",
        "text": "The most important thing is to solve it correctly, not to solve it.",
        "start": 379520,
        "end": 383760,
        "speaker": "A"
      },
      {
        "sid": "s000057",
        "text": "Especially as you have already noticed with algorithms, one assumption could change a problem entirely.",
        "start": 385360,
        "end": 393300,
        "speaker": "A"
      },
      {
        "sid": "s000058",
        "text": "All the way from making a problem that is super simple to a problem that's impossible to solve and vice versa.",
        "start": 393540,
        "end": 402260,
        "speaker": "A"
      },
      {
        "sid": "s000059",
        "text": "But the extra time is worth it.",
        "start": 403220,
        "end": 405060,
        "speaker": "A"
      },
      {
        "sid": "s000060",
        "text": "Okay, so having this problem, I know bread first search doesn't work.",
        "start": 405860,
        "end": 410500,
        "speaker": "A"
      },
      {
        "sid": "s000061",
        "text": "I may try that.",
        "start": 410900,
        "end": 412100,
        "speaker": "A"
      },
      {
        "sid": "s000062",
        "text": "I may try grid first search, modification of preference search.",
        "start": 412420,
        "end": 417270,
        "speaker": "A"
      },
      {
        "sid": "s000063",
        "text": "Those are good approaches, but as I try them, I'll see that they are failing if they are not giving the solution that I care.",
        "start": 417350,
        "end": 425430,
        "speaker": "A"
      },
      {
        "sid": "s000064",
        "text": "What if I take a weight 10 and translate that into 10 edges of weight 1?",
        "start": 428150,
        "end": 439910,
        "speaker": "A"
      },
      {
        "sid": "s000065",
        "text": "Now we have an unweighted problem.",
        "start": 440960,
        "end": 442880,
        "speaker": "A"
      },
      {
        "sid": "s000066",
        "text": "Would that work?",
        "start": 443440,
        "end": 444640,
        "speaker": "A"
      },
      {
        "sid": "s000067",
        "text": "I know how to solve the unweighted version.",
        "start": 448400,
        "end": 450960,
        "speaker": "A"
      },
      {
        "sid": "s000068",
        "text": "Would that give us a solution to the problem?",
        "start": 453280,
        "end": 455680,
        "speaker": "A"
      },
      {
        "sid": "s000069",
        "text": "The answer is yes and no.",
        "start": 457200,
        "end": 459120,
        "speaker": "A"
      },
      {
        "sid": "s000070",
        "text": "It will solve the problem.",
        "start": 460320,
        "end": 461840,
        "speaker": "A"
      },
      {
        "sid": "s000071",
        "text": "But if you have a weight 10 or 100, you are increasing the problem size by a multiple of hundred or a million or N, etc.",
        "start": 462400,
        "end": 472670,
        "speaker": "A"
      },
      {
        "sid": "s000072",
        "text": "Therefore, whatever algorithm you come up with won't be just a function of vertices and edges.",
        "start": 472910,
        "end": 480350,
        "speaker": "A"
      },
      {
        "sid": "s000073",
        "text": "It will be a function of vertices, edges and weights.",
        "start": 480590,
        "end": 484429,
        "speaker": "A"
      },
      {
        "sid": "s000074",
        "text": "So whenever we say come up with A polynomial time algorithm, it should be polynomial in the input side, the size of this input.",
        "start": 486270,
        "end": 497960,
        "speaker": "A"
      },
      {
        "sid": "s000075",
        "text": "So when you write a program, the input you take are the vertices and edges and weight on the edges.",
        "start": 498440,
        "end": 505480,
        "speaker": "A"
      },
      {
        "sid": "s000076",
        "text": "So the size of the input is about E plus n. So when I say come up with a polynomial time algorithm, come up with an efficient algorithm, it should be understood that efficient in terms of E and N, not some other parameter, an infinite parameter in the universe.",
        "start": 506200,
        "end": 529170,
        "speaker": "A"
      },
      {
        "sid": "s000077",
        "text": "Not polynomial in that.",
        "start": 529410,
        "end": 531010,
        "speaker": "A"
      },
      {
        "sid": "s000078",
        "text": "Not polynomial in a much larger graph.",
        "start": 531250,
        "end": 533890,
        "speaker": "A"
      },
      {
        "sid": "s000079",
        "text": "Polynomial in this.",
        "start": 534370,
        "end": 535890,
        "speaker": "A"
      },
      {
        "sid": "s000080",
        "text": "That's a key point.",
        "start": 536130,
        "end": 537730,
        "speaker": "A"
      },
      {
        "sid": "s000081",
        "text": "We'll come across this multiple times.",
        "start": 539970,
        "end": 542530,
        "speaker": "A"
      },
      {
        "sid": "s000082",
        "text": "Problems that look polynomial time, they are not because there are polynomial in something else, not in the input class.",
        "start": 543090,
        "end": 550890,
        "speaker": "A"
      },
      {
        "sid": "s000083",
        "text": "So in this class, whenever you hear polynomial or quadratic or linear, it always means linear, quadratic, polynomial in the input size.",
        "start": 551290,
        "end": 563290,
        "speaker": "A"
      },
      {
        "sid": "s000084",
        "text": "That should be understood even when it's not explicitly mentioned.",
        "start": 563850,
        "end": 568490,
        "speaker": "A"
      },
      {
        "sid": "s000085",
        "text": "Okay, so maybe taking an edge of size 100 and translating that into 100 unit weight edges works, but that won't be polynomial anymore and therefore we are not interested in it.",
        "start": 570970,
        "end": 588020,
        "speaker": "A"
      },
      {
        "sid": "s000086",
        "text": "Okay, so how would I go about solving this problem?",
        "start": 590420,
        "end": 593460,
        "speaker": "A"
      },
      {
        "sid": "s000087",
        "text": "I can see it resembles a problem I solved seen before, transfer, search, etc.",
        "start": 594580,
        "end": 600740,
        "speaker": "A"
      },
      {
        "sid": "s000088",
        "text": "And you should try that and you should play with those ideas, but they won't work.",
        "start": 600820,
        "end": 605220,
        "speaker": "A"
      },
      {
        "sid": "s000089",
        "text": "The other thing I have available to me are algorithmic paradigms.",
        "start": 606260,
        "end": 610580,
        "speaker": "A"
      },
      {
        "sid": "s000090",
        "text": "So far we basically have three.",
        "start": 610980,
        "end": 612900,
        "speaker": "A"
      },
      {
        "sid": "s000091",
        "text": "Okay, so in a few weeks or by the end of this course, we have six of these items out available to us.",
        "start": 616500,
        "end": 624030,
        "speaker": "A"
      },
      {
        "sid": "s000092",
        "text": "So one of the things I can try is all these algorithmic paradigms for today.",
        "start": 625870,
        "end": 630270,
        "speaker": "A"
      },
      {
        "sid": "s000093",
        "text": "Greedy.",
        "start": 630350,
        "end": 631030,
        "speaker": "A"
      },
      {
        "sid": "s000094",
        "text": "So for a moment I say, let me use the greedy paradigm to solve this problem.",
        "start": 631030,
        "end": 636590,
        "speaker": "A"
      },
      {
        "sid": "s000095",
        "text": "If it works, great.",
        "start": 636990,
        "end": 638270,
        "speaker": "A"
      },
      {
        "sid": "s000096",
        "text": "If not, I move on to something else.",
        "start": 638270,
        "end": 640750,
        "speaker": "A"
      },
      {
        "sid": "s000097",
        "text": "What does greedy say?",
        "start": 642670,
        "end": 644430,
        "speaker": "A"
      },
      {
        "sid": "s000098",
        "text": "Greedy says that take this, that's your starting point.",
        "start": 645070,
        "end": 650300,
        "speaker": "A"
      },
      {
        "sid": "s000099",
        "text": "And we understand the distance from S to itself is zero.",
        "start": 650780,
        "end": 655500,
        "speaker": "A"
      },
      {
        "sid": "s000100",
        "text": "By definition, we are already there.",
        "start": 655580,
        "end": 659100,
        "speaker": "A"
      },
      {
        "sid": "s000101",
        "text": "There is no edges to traverse from S to get to S. So question is, is there going to be another vertex in this graph that I can confidently say it's distance to S and never change that?",
        "start": 659580,
        "end": 678000,
        "speaker": "A"
      },
      {
        "sid": "s000102",
        "text": "That's what it really does.",
        "start": 678480,
        "end": 680000,
        "speaker": "A"
      },
      {
        "sid": "s000103",
        "text": "Of all the intervals scheduling that we did last time, you take the one that ends first without having looked at all the other intervals, you say that's what's going to be in the output of the non overlapping interval problem.",
        "start": 680640,
        "end": 696480,
        "speaker": "A"
      },
      {
        "sid": "s000104",
        "text": "I'll never change my mind about that.",
        "start": 696480,
        "end": 699280,
        "speaker": "A"
      },
      {
        "sid": "s000105",
        "text": "Can we do something similar here?",
        "start": 700810,
        "end": 702890,
        "speaker": "A"
      },
      {
        "sid": "s000106",
        "text": "If it was possible to do something similar there, then that vertex probably won't be a vertex way far from S, because there are so many paths between S and Say X.",
        "start": 703370,
        "end": 720970,
        "speaker": "A"
      },
      {
        "sid": "s000107",
        "text": "Assuming X is connected to all this, that immediately, right away, trying to figure out the distance of X seems difficult.",
        "start": 721450,
        "end": 734340,
        "speaker": "A"
      },
      {
        "sid": "s000108",
        "text": "So X may not be a good choice for the immediate greedy decision that I'm trying to make.",
        "start": 734820,
        "end": 742420,
        "speaker": "A"
      },
      {
        "sid": "s000109",
        "text": "Because for now, in my head I want to try green.",
        "start": 742500,
        "end": 745540,
        "speaker": "A"
      },
      {
        "sid": "s000110",
        "text": "That's the first thing I want to try.",
        "start": 746500,
        "end": 748180,
        "speaker": "A"
      },
      {
        "sid": "s000111",
        "text": "If it doesn't work, I'll do something else.",
        "start": 748180,
        "end": 750420,
        "speaker": "A"
      },
      {
        "sid": "s000112",
        "text": "Okay.",
        "start": 752430,
        "end": 752910,
        "speaker": "A"
      },
      {
        "sid": "s000113",
        "text": "There are also technical difficulties when the weights are negative.",
        "start": 754190,
        "end": 760750,
        "speaker": "A"
      },
      {
        "sid": "s000114",
        "text": "We will see why.",
        "start": 763070,
        "end": 764350,
        "speaker": "A"
      },
      {
        "sid": "s000115",
        "text": "So for now, I assume all the weights on the edges are positive numbers.",
        "start": 765230,
        "end": 770510,
        "speaker": "A"
      },
      {
        "sid": "s000116",
        "text": "And let's say integers 1, 2, 3, 8, 7, 12, etc.",
        "start": 771310,
        "end": 776110,
        "speaker": "A"
      },
      {
        "sid": "s000117",
        "text": "In about four weeks you will have algorithms that can deal with negative edges.",
        "start": 777560,
        "end": 783640,
        "speaker": "A"
      },
      {
        "sid": "s000118",
        "text": "Today we can't.",
        "start": 784680,
        "end": 785640,
        "speaker": "A"
      },
      {
        "sid": "s000119",
        "text": "We don't have the tools to tackle that problem.",
        "start": 785640,
        "end": 788440,
        "speaker": "A"
      },
      {
        "sid": "s000120",
        "text": "Okay, so something far.",
        "start": 791080,
        "end": 793640,
        "speaker": "A"
      },
      {
        "sid": "s000121",
        "text": "Because there are just so many paths to X, I can't tell for sure what the distance.",
        "start": 796120,
        "end": 802750,
        "speaker": "A"
      },
      {
        "sid": "s000122",
        "text": "If I'm going from LA and I want to find the shortest path to the city, probably going somewhere to New York.",
        "start": 805060,
        "end": 812140,
        "speaker": "A"
      },
      {
        "sid": "s000123",
        "text": "That's tough because there are so many ways to get there.",
        "start": 812140,
        "end": 815380,
        "speaker": "A"
      },
      {
        "sid": "s000124",
        "text": "Planes, trains, so many roads I could take, I could bike part of it.",
        "start": 815780,
        "end": 821460,
        "speaker": "A"
      },
      {
        "sid": "s000125",
        "text": "So, so many options.",
        "start": 821540,
        "end": 823060,
        "speaker": "A"
      },
      {
        "sid": "s000126",
        "text": "So that seemed to be a tough problem, what going from outside of la, say, to San Diego.",
        "start": 824020,
        "end": 832030,
        "speaker": "A"
      },
      {
        "sid": "s000127",
        "text": "Choices are limited, so it's a more controlled problem.",
        "start": 832510,
        "end": 836350,
        "speaker": "A"
      },
      {
        "sid": "s000128",
        "text": "So maybe I can immediately discuss the best way to go from San Diego.",
        "start": 837150,
        "end": 843150,
        "speaker": "A"
      },
      {
        "sid": "s000129",
        "text": "That's kind of the idea.",
        "start": 843550,
        "end": 845070,
        "speaker": "A"
      },
      {
        "sid": "s000130",
        "text": "Okay, so based on this concept, then maybe I initially look at neighbors of S. For example, I take the neighbor that's closest to S, B, and I say, how do I get from S to B is through this edge.",
        "start": 846510,
        "end": 876580,
        "speaker": "A"
      },
      {
        "sid": "s000131",
        "text": "Therefore, I write the distance from S to to be as one.",
        "start": 877540,
        "end": 882440,
        "speaker": "A"
      },
      {
        "sid": "s000132",
        "text": "Whenever I put a number in bracket.",
        "start": 883160,
        "end": 885440,
        "speaker": "A"
      },
      {
        "sid": "s000133",
        "text": "That means that's the final shortest path, not some intermediate number, not a number that I'm going to change later.",
        "start": 885440,
        "end": 895400,
        "speaker": "A"
      },
      {
        "sid": "s000134",
        "text": "It's the final shortest path.",
        "start": 895880,
        "end": 898200,
        "speaker": "A"
      },
      {
        "sid": "s000135",
        "text": "So I claim, if you take all neighbors of S, take the one that's closest to, in this example, B.",
        "start": 898920,
        "end": 908110,
        "speaker": "A"
      },
      {
        "sid": "s000136",
        "text": "First of all, what are neighbors of S A and B?",
        "start": 909630,
        "end": 913070,
        "speaker": "A"
      },
      {
        "sid": "s000137",
        "text": "Which one is closest to S?",
        "start": 913390,
        "end": 915230,
        "speaker": "A"
      },
      {
        "sid": "s000138",
        "text": "B?",
        "start": 915790,
        "end": 916190,
        "speaker": "A"
      },
      {
        "sid": "s000139",
        "text": "Because this is 10, this is one.",
        "start": 918030,
        "end": 921070,
        "speaker": "A"
      },
      {
        "sid": "s000140",
        "text": "I'm going to say in a greedy fashion, in a greedy paradigm methodology, the distance from S to B.",
        "start": 922030,
        "end": 930230,
        "speaker": "A"
      },
      {
        "sid": "s000141",
        "text": "When I say distance, I mean the shortest distance.",
        "start": 930230,
        "end": 933080,
        "speaker": "A"
      },
      {
        "sid": "s000142",
        "text": "The shortest path is one.",
        "start": 933080,
        "end": 935160,
        "speaker": "A"
      },
      {
        "sid": "s000143",
        "text": "I claim that.",
        "start": 935640,
        "end": 936840,
        "speaker": "A"
      },
      {
        "sid": "s000144",
        "text": "How do I prove it?",
        "start": 937720,
        "end": 939160,
        "speaker": "A"
      },
      {
        "sid": "s000145",
        "text": "The way I prove it is the following.",
        "start": 939880,
        "end": 941800,
        "speaker": "A"
      },
      {
        "sid": "s000146",
        "text": "This is S, this is B.",
        "start": 943720,
        "end": 946360,
        "speaker": "A"
      },
      {
        "sid": "s000147",
        "text": "And I'm saying this is the shortest path by contradiction.",
        "start": 946840,
        "end": 952600,
        "speaker": "A"
      },
      {
        "sid": "s000148",
        "text": "If there was a shorter path from S to B, it would go through some other vertex and it comes back to B.",
        "start": 953160,
        "end": 963970,
        "speaker": "A"
      },
      {
        "sid": "s000149",
        "text": "And remember, the length of the path is irrelevant.",
        "start": 965810,
        "end": 969290,
        "speaker": "A"
      },
      {
        "sid": "s000150",
        "text": "It's the weight that matters, the sum of the weights.",
        "start": 969290,
        "end": 972770,
        "speaker": "A"
      },
      {
        "sid": "s000151",
        "text": "So by contradiction, if there was a path like that, let's look at the very first edge on this path.",
        "start": 973570,
        "end": 981890,
        "speaker": "A"
      },
      {
        "sid": "s000152",
        "text": "Why?",
        "start": 982370,
        "end": 982770,
        "speaker": "A"
      },
      {
        "sid": "s000153",
        "text": "In this example, Y is A.",
        "start": 983300,
        "end": 985460,
        "speaker": "A"
      },
      {
        "sid": "s000154",
        "text": "Okay?",
        "start": 987700,
        "end": 988340,
        "speaker": "A"
      },
      {
        "sid": "s000155",
        "text": "So S has to go through Y and then some other edges.",
        "start": 988820,
        "end": 993140,
        "speaker": "A"
      },
      {
        "sid": "s000156",
        "text": "The distance from S to Y is greater than the distance from S to B Y, because I pick B to be such a vertex, I pick the shortest one, the shortest edge, the minimum edge.",
        "start": 996420,
        "end": 1018010,
        "speaker": "A"
      },
      {
        "sid": "s000157",
        "text": "Therefore, because that's the case, then whatever I add from Y to B, So this is plus DY to B.",
        "start": 1019050,
        "end": 1030490,
        "speaker": "A"
      },
      {
        "sid": "s000158",
        "text": "That's gotta be greater than D of S to B.",
        "start": 1030570,
        "end": 1034350,
        "speaker": "A"
      },
      {
        "sid": "s000159",
        "text": "So this number is greater than this number.",
        "start": 1037139,
        "end": 1040739,
        "speaker": "A"
      },
      {
        "sid": "s000160",
        "text": "Adding some extra stuff, basic algebra, is going to make that number bigger only because this part is a positive number.",
        "start": 1042739,
        "end": 1054579,
        "speaker": "A"
      },
      {
        "sid": "s000161",
        "text": "Because I assumed there are no negative edges in this case graph.",
        "start": 1056179,
        "end": 1061070,
        "speaker": "A"
      },
      {
        "sid": "s000162",
        "text": "And in fact, when I have negative edges, this whole basic premise is going to fade.",
        "start": 1062030,
        "end": 1067550,
        "speaker": "A"
      },
      {
        "sid": "s000163",
        "text": "And that's why greedy doesn't work with negative edges.",
        "start": 1069950,
        "end": 1073150,
        "speaker": "A"
      },
      {
        "sid": "s000164",
        "text": "That's why we assume, to begin with, there are negative edges.",
        "start": 1073390,
        "end": 1077150,
        "speaker": "A"
      },
      {
        "sid": "s000165",
        "text": "No negative edges.",
        "start": 1077230,
        "end": 1078590,
        "speaker": "A"
      },
      {
        "sid": "s000166",
        "text": "Okay, so based on this proof, I write in A flow what I just said here.",
        "start": 1080110,
        "end": 1088510,
        "speaker": "A"
      },
      {
        "sid": "s000167",
        "text": "It means this should be the final weight from S to B.",
        "start": 1088910,
        "end": 1094110,
        "speaker": "A"
      },
      {
        "sid": "s000168",
        "text": "So wonderful we can find at least one vertex whose distance to S is the minimum distance.",
        "start": 1095790,
        "end": 1105310,
        "speaker": "A"
      },
      {
        "sid": "s000169",
        "text": "So the first step of reading we were able to solve in the famous problem when A ask B, that one first step happens.",
        "start": 1106270,
        "end": 1116470,
        "speaker": "A"
      },
      {
        "sid": "s000170",
        "text": "Based on the answer, we eliminate one of them in interval scheduling.",
        "start": 1116710,
        "end": 1121550,
        "speaker": "A"
      },
      {
        "sid": "s000171",
        "text": "The first interval that ends, I put it in the optimal solution and then I kind of carry this idea to the rest of the problem.",
        "start": 1121550,
        "end": 1130310,
        "speaker": "A"
      },
      {
        "sid": "s000172",
        "text": "So I have reduced the problem size here.",
        "start": 1130630,
        "end": 1134390,
        "speaker": "A"
      },
      {
        "sid": "s000173",
        "text": "The same thing I have reduced the problem size with, say, well, well, S is easy.",
        "start": 1134390,
        "end": 1140320,
        "speaker": "A"
      },
      {
        "sid": "s000174",
        "text": "So I have n minus one other vertices.",
        "start": 1140960,
        "end": 1144560,
        "speaker": "A"
      },
      {
        "sid": "s000175",
        "text": "This is fixed.",
        "start": 1145200,
        "end": 1146360,
        "speaker": "A"
      },
      {
        "sid": "s000176",
        "text": "Now I only have n minus 2.",
        "start": 1146360,
        "end": 1148560,
        "speaker": "A"
      },
      {
        "sid": "s000177",
        "text": "So.",
        "start": 1152000,
        "end": 1152400,
        "speaker": "A"
      },
      {
        "sid": "s000178",
        "text": "But b is kind of special.",
        "start": 1153120,
        "end": 1155200,
        "speaker": "A"
      },
      {
        "sid": "s000179",
        "text": "It's the closest thing to S. There are no other vertices that are closest to S. So then I have to go to second closest.",
        "start": 1157200,
        "end": 1168410,
        "speaker": "A"
      },
      {
        "sid": "s000180",
        "text": "So what would that be?",
        "start": 1170730,
        "end": 1172490,
        "speaker": "A"
      },
      {
        "sid": "s000181",
        "text": "Next one is going to be A, the next neighbor that's after one closest.",
        "start": 1172650,
        "end": 1179050,
        "speaker": "A"
      },
      {
        "sid": "s000182",
        "text": "So I go to A and I say, okay, the distance is 10 and that's finalized.",
        "start": 1179370,
        "end": 1184930,
        "speaker": "A"
      },
      {
        "sid": "s000183",
        "text": "That's the minimum distance from S to A.",
        "start": 1184930,
        "end": 1187290,
        "speaker": "A"
      },
      {
        "sid": "s000184",
        "text": "Trying to scale up the first thing that I came up with.",
        "start": 1188010,
        "end": 1195140,
        "speaker": "A"
      },
      {
        "sid": "s000185",
        "text": "Now if you try that proof from S to A, you gotta prove that if there was an alternate path from S to A, that would be less than that.",
        "start": 1195780,
        "end": 1210020,
        "speaker": "A"
      },
      {
        "sid": "s000186",
        "text": "But we can't say that.",
        "start": 1210820,
        "end": 1212740,
        "speaker": "A"
      },
      {
        "sid": "s000187",
        "text": "The only reason we could say that before is because S2Y for sure is greater than S to B.",
        "start": 1213300,
        "end": 1220400,
        "speaker": "A"
      },
      {
        "sid": "s000188",
        "text": "That was the very definition of B.",
        "start": 1220720,
        "end": 1223440,
        "speaker": "A"
      },
      {
        "sid": "s000189",
        "text": "But now we don't have that anymore because this distance in general could be less than that.",
        "start": 1223760,
        "end": 1230240,
        "speaker": "A"
      },
      {
        "sid": "s000190",
        "text": "Therefore it could be a path going back to A which is less than 10.",
        "start": 1230480,
        "end": 1235520,
        "speaker": "A"
      },
      {
        "sid": "s000191",
        "text": "In fact, in this example that's exactly the case.",
        "start": 1235600,
        "end": 1238320,
        "speaker": "A"
      },
      {
        "sid": "s000192",
        "text": "So fixing a distance from S to A to 10 is not going to work.",
        "start": 1239200,
        "end": 1244430,
        "speaker": "A"
      },
      {
        "sid": "s000193",
        "text": "Prove we can't prove it.",
        "start": 1246430,
        "end": 1248270,
        "speaker": "A"
      },
      {
        "sid": "s000194",
        "text": "Our basic proof technique is going to fail and we have in fact a counterexample.",
        "start": 1249470,
        "end": 1255270,
        "speaker": "A"
      },
      {
        "sid": "s000195",
        "text": "Y fades so what should I do?",
        "start": 1255270,
        "end": 1262030,
        "speaker": "A"
      },
      {
        "sid": "s000196",
        "text": "Should I go to a vertex that's closest to B?",
        "start": 1262350,
        "end": 1265870,
        "speaker": "A"
      },
      {
        "sid": "s000197",
        "text": "A vertex that's closest to B?",
        "start": 1266190,
        "end": 1267810,
        "speaker": "A"
      },
      {
        "sid": "s000198",
        "text": "Something else is not clear.",
        "start": 1268120,
        "end": 1270200,
        "speaker": "A"
      },
      {
        "sid": "s000199",
        "text": "So this whole idea of faith, the greedy idea, unless we can come up with a clever way of picking a next vertex.",
        "start": 1271000,
        "end": 1281560,
        "speaker": "A"
      },
      {
        "sid": "s000200",
        "text": "In this example, if I knew how to pick the next vertex, I would pick C as my next vertex and fix that as one plus one.",
        "start": 1281880,
        "end": 1293320,
        "speaker": "A"
      },
      {
        "sid": "s000201",
        "text": "So C will be a good choice.",
        "start": 1295170,
        "end": 1297010,
        "speaker": "A"
      },
      {
        "sid": "s000202",
        "text": "A is not a good choice.",
        "start": 1297570,
        "end": 1299330,
        "speaker": "A"
      },
      {
        "sid": "s000203",
        "text": "So you see, I'm trying, I don't know how to solve this problem, so I'm going to try greedy.",
        "start": 1300290,
        "end": 1306530,
        "speaker": "A"
      },
      {
        "sid": "s000204",
        "text": "I'm going to go from B.",
        "start": 1306610,
        "end": 1308290,
        "speaker": "A"
      },
      {
        "sid": "s000205",
        "text": "That's easy.",
        "start": 1308290,
        "end": 1309250,
        "speaker": "A"
      },
      {
        "sid": "s000206",
        "text": "Then I'm going to go to A.",
        "start": 1309409,
        "end": 1310810,
        "speaker": "A"
      },
      {
        "sid": "s000207",
        "text": "That phase, then I come up with hypothesis of what else to consider.",
        "start": 1310810,
        "end": 1315330,
        "speaker": "A"
      },
      {
        "sid": "s000208",
        "text": "And these ideas and these examples hopefully will give rise to a brand new algorithm.",
        "start": 1318850,
        "end": 1325530,
        "speaker": "A"
      },
      {
        "sid": "s000209",
        "text": "Again, solving this problem is not important.",
        "start": 1328010,
        "end": 1330410,
        "speaker": "A"
      },
      {
        "sid": "s000210",
        "text": "Solving any problem in this course is not important.",
        "start": 1330650,
        "end": 1333290,
        "speaker": "A"
      },
      {
        "sid": "s000211",
        "text": "What is important is the methodology.",
        "start": 1333930,
        "end": 1336090,
        "speaker": "A"
      },
      {
        "sid": "s000212",
        "text": "That's why we try to come up with an algorithm together from scratch, in terms of what may work, what may not work and how to evolve our thinking.",
        "start": 1336650,
        "end": 1346650,
        "speaker": "A"
      },
      {
        "sid": "s000213",
        "text": "That's really why what matters, Problem solving things.",
        "start": 1346810,
        "end": 1349950,
        "speaker": "A"
      },
      {
        "sid": "s000214",
        "text": "Because a problem that you see in the future, let's say your job is a problem that no one ever solved before.",
        "start": 1352430,
        "end": 1360510,
        "speaker": "A"
      },
      {
        "sid": "s000215",
        "text": "Because if they did, why do they need you?",
        "start": 1361470,
        "end": 1363630,
        "speaker": "A"
      },
      {
        "sid": "s000216",
        "text": "They need you to solve a problem that was never solved.",
        "start": 1365230,
        "end": 1368350,
        "speaker": "A"
      },
      {
        "sid": "s000217",
        "text": "Yeah, so we did greedy algorithm and let me rephrase, we did the greedy algorithm and that allowed us to choose B.",
        "start": 1369870,
        "end": 1381000,
        "speaker": "B"
      },
      {
        "sid": "s000218",
        "text": "What if we continue the algorithm but this time we start from B as if it's the new S and then we do the same exact step and that will give us C. We do the same thing.",
        "start": 1382280,
        "end": 1396480,
        "speaker": "B"
      },
      {
        "sid": "s000219",
        "text": "Now C is the new square and we start like going.",
        "start": 1396480,
        "end": 1400050,
        "speaker": "B"
      },
      {
        "sid": "s000220",
        "text": "So essentially it's some sort of a dfs, but with the greedy algorithm.",
        "start": 1400050,
        "end": 1405250,
        "speaker": "B"
      },
      {
        "sid": "s000221",
        "text": "So that's.",
        "start": 1405970,
        "end": 1406690,
        "speaker": "A"
      },
      {
        "sid": "s000222",
        "text": "So because we got stuck here, we need to have other techniques.",
        "start": 1406770,
        "end": 1410690,
        "speaker": "A"
      },
      {
        "sid": "s000223",
        "text": "So your technique is S perfect, everything works, improved.",
        "start": 1411250,
        "end": 1415730,
        "speaker": "A"
      },
      {
        "sid": "s000224",
        "text": "Now let's start from B.",
        "start": 1415970,
        "end": 1417650,
        "speaker": "A"
      },
      {
        "sid": "s000225",
        "text": "Would that work in this example?",
        "start": 1418130,
        "end": 1420130,
        "speaker": "A"
      },
      {
        "sid": "s000226",
        "text": "Absolutely.",
        "start": 1420450,
        "end": 1421410,
        "speaker": "A"
      },
      {
        "sid": "s000227",
        "text": "Okay, so let's change the example now with your algorithm work.",
        "start": 1421970,
        "end": 1431100,
        "speaker": "A"
      },
      {
        "sid": "s000228",
        "text": "So it's a good, good way to proceed and it worked for the previous examples, but it won't work here.",
        "start": 1433260,
        "end": 1440300,
        "speaker": "A"
      },
      {
        "sid": "s000229",
        "text": "We need something else.",
        "start": 1441180,
        "end": 1442700,
        "speaker": "A"
      },
      {
        "sid": "s000230",
        "text": "What if instead of doing the greedy step by step that we select the minimum edge from S, can we go through that?",
        "start": 1443500,
        "end": 1459980,
        "speaker": "B"
      },
      {
        "sid": "s000231",
        "text": "So, so, yeah, so, so these are good.",
        "start": 1462940,
        "end": 1465420,
        "speaker": "A"
      },
      {
        "sid": "s000232",
        "text": "When you are seeing a problem for the first time, we have to go through this process of trying different things.",
        "start": 1465580,
        "end": 1472700,
        "speaker": "A"
      },
      {
        "sid": "s000233",
        "text": "You almost like most likely first shot, you can't solve the problem.",
        "start": 1472940,
        "end": 1477980,
        "speaker": "A"
      },
      {
        "sid": "s000234",
        "text": "It's gotta be an iterative approach.",
        "start": 1478700,
        "end": 1480700,
        "speaker": "A"
      },
      {
        "sid": "s000235",
        "text": "That's why it takes time, especially when you come to these created algorithms.",
        "start": 1480860,
        "end": 1486340,
        "speaker": "A"
      },
      {
        "sid": "s000236",
        "text": "Right?",
        "start": 1486340,
        "end": 1486700,
        "speaker": "A"
      },
      {
        "sid": "s000237",
        "text": "So don't be afraid of trying different things.",
        "start": 1486940,
        "end": 1489900,
        "speaker": "A"
      },
      {
        "sid": "s000238",
        "text": "Many of them gonna fail and that's good.",
        "start": 1490860,
        "end": 1493340,
        "speaker": "A"
      },
      {
        "sid": "s000239",
        "text": "From that we're gonna learn.",
        "start": 1494380,
        "end": 1495820,
        "speaker": "A"
      },
      {
        "sid": "s000240",
        "text": "We just did a few hypothesis.",
        "start": 1495820,
        "end": 1498180,
        "speaker": "A"
      },
      {
        "sid": "s000241",
        "text": "They both failed.",
        "start": 1498180,
        "end": 1499380,
        "speaker": "A"
      },
      {
        "sid": "s000242",
        "text": "But based on that, you came up with another algorithm.",
        "start": 1499380,
        "end": 1501960,
        "speaker": "A"
      },
      {
        "sid": "s000243",
        "text": "So based on that, let me suggest the following.",
        "start": 1503070,
        "end": 1505710,
        "speaker": "A"
      }
    ],
    "context_after_main_text": [
      {
        "sid": "s000244",
        "text": "Let me get rid of that.",
        "start": 1506510,
        "end": 1507950,
        "speaker": "A"
      },
      {
        "sid": "s000245",
        "text": "Let me get rid of that.",
        "start": 1507950,
        "end": 1509310,
        "speaker": "A"
      },
      {
        "sid": "s000246",
        "text": "So there are numbers that are finalized.",
        "start": 1510190,
        "end": 1513310,
        "speaker": "A"
      },
      {
        "sid": "s000247",
        "text": "I put them in brackets.",
        "start": 1513390,
        "end": 1514990,
        "speaker": "A"
      },
      {
        "sid": "s000248",
        "text": "Okay?",
        "start": 1516430,
        "end": 1517070,
        "speaker": "A"
      },
      {
        "sid": "s000249",
        "text": "But there are also numbers that are temporary.",
        "start": 1517550,
        "end": 1520590,
        "speaker": "A"
      },
      {
        "sid": "s000250",
        "text": "For example, I've seen a.",
        "start": 1521310,
        "end": 1523710,
        "speaker": "A"
      },
      {
        "sid": "s000251",
        "text": "This was 10.",
        "start": 1524750,
        "end": 1525790,
        "speaker": "A"
      },
      {
        "sid": "s000252",
        "text": "This is one original.",
        "start": 1526670,
        "end": 1528680,
        "speaker": "A"
      },
      {
        "sid": "s000253",
        "text": "I say for now, I know a path of distance 10 from A to S. I'm not going to finalize that because it won't work.",
        "start": 1529640,
        "end": 1541240,
        "speaker": "A"
      }
    ]
  }
]