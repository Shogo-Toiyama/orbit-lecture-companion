{
  "idx": 5,
  "title": "Graph Data Structures",
  "count": 65,
  "sids": [
    "s000180",
    "s000181",
    "s000182",
    "s000183",
    "s000414",
    "s000495",
    "s000496",
    "s000501",
    "s000502",
    "s000503",
    "s000504",
    "s000506",
    "s000507",
    "s000508",
    "s000509",
    "s000510",
    "s000511",
    "s000512",
    "s000513",
    "s000514",
    "s000515",
    "s000516",
    "s000517",
    "s000518",
    "s000519",
    "s000520",
    "s000521",
    "s000522",
    "s000523",
    "s000524",
    "s000525",
    "s000526",
    "s000527",
    "s000528",
    "s000529",
    "s000530",
    "s000531",
    "s000532",
    "s000533",
    "s000534",
    "s000535",
    "s000536",
    "s000537",
    "s000538",
    "s000539",
    "s000540",
    "s000541",
    "s000542",
    "s000543",
    "s000544",
    "s000545",
    "s000546",
    "s000547",
    "s000548",
    "s000549",
    "s000550",
    "s000551",
    "s000552",
    "s000553",
    "s000555",
    "s000556",
    "s000557",
    "s000558",
    "s000786",
    "s000787"
  ],
  "evidences": [
    {
      "sid": "s000180",
      "text": "I'm going to talk about how to represent a graph.",
      "start": 1109140,
      "end": 1113860,
      "role": "lecture"
    },
    {
      "sid": "s000181",
      "text": "What is a data structure?",
      "start": 1114180,
      "end": 1115740,
      "role": "lecture"
    },
    {
      "sid": "s000182",
      "text": "And there are two well-known data structures for representing a graph.",
      "start": 1115740,
      "end": 1119860,
      "role": "lecture"
    },
    {
      "sid": "s000183",
      "text": "We will get into that.",
      "start": 1119860,
      "end": 1120980,
      "role": "lecture"
    },
    {
      "sid": "s000414",
      "text": "Once we discuss the data structure for total topological sort, then we will know how to obtain the sources.",
      "start": 2498080,
      "end": 2506880,
      "role": "lecture"
    },
    {
      "sid": "s000495",
      "text": "Okay, now what we need to do is to understand or agree.",
      "start": 2908650,
      "end": 2916170,
      "role": "lecture"
    },
    {
      "sid": "s000496",
      "text": "How a graph is stored.",
      "start": 2916370,
      "end": 2918290,
      "role": "lecture"
    },
    {
      "sid": "s000501",
      "text": "But in order to look at the time complexity analysis, we need to go back and start talking about how am I representing a graph.",
      "start": 2935010,
      "end": 2945620,
      "role": "lecture"
    },
    {
      "sid": "s000502",
      "text": "There are two ways.",
      "start": 2946980,
      "end": 2948420,
      "role": "lecture"
    },
    {
      "sid": "s000503",
      "text": "There are many ways, but there are two standard ways to represent a graph.",
      "start": 2948420,
      "end": 2953140,
      "role": "lecture"
    },
    {
      "sid": "s000504",
      "text": "One is a linkless representation.",
      "start": 2957220,
      "end": 2960260,
      "role": "lecture"
    },
    {
      "sid": "s000506",
      "text": "So every vertex is going to have a linked list of its own.",
      "start": 2968830,
      "end": 2973550,
      "role": "lecture"
    },
    {
      "sid": "s000507",
      "text": "So A, B, C, D and E. There are five vertices.",
      "start": 2974430,
      "end": 2982270,
      "role": "lecture"
    },
    {
      "sid": "s000508",
      "text": "There's going to be five linked lists.",
      "start": 2982510,
      "end": 2985310,
      "role": "lecture"
    },
    {
      "sid": "s000509",
      "text": "A is connected to B and C. So I'm going to write, write B here and C here.",
      "start": 2988830,
      "end": 2995890,
      "role": "lecture"
    },
    {
      "sid": "s000510",
      "text": "This does not mean, although it may look like that, doesn't mean that B is connected to C. This all.",
      "start": 2998690,
      "end": 3006370,
      "role": "lecture"
    },
    {
      "sid": "s000511",
      "text": "All it means is that A is connected to all of these.",
      "start": 3006530,
      "end": 3010530,
      "role": "lecture"
    },
    {
      "sid": "s000512",
      "text": "In this list.",
      "start": 3010610,
      "end": 3011490,
      "role": "lecture"
    },
    {
      "sid": "s000513",
      "text": "There is no but just this list alone.",
      "start": 3012930,
      "end": 3016450,
      "role": "lecture"
    },
    {
      "sid": "s000514",
      "text": "There is no relationship between these and C. Even if there was an A between them, this doesn't show that.",
      "start": 3016690,
      "end": 3024540,
      "role": "lecture"
    },
    {
      "sid": "s000515",
      "text": "Then I go to B.",
      "start": 3025180,
      "end": 3026540,
      "role": "lecture"
    },
    {
      "sid": "s000516",
      "text": "That's connected to what?",
      "start": 3027020,
      "end": 3029620,
      "role": "lecture"
    },
    {
      "sid": "s000517",
      "text": "Is B connected to anybody?",
      "start": 3029620,
      "end": 3034700,
      "role": "lecture"
    },
    {
      "sid": "s000518",
      "text": "Sorry, just B, not A.",
      "start": 3036700,
      "end": 3039980,
      "role": "lecture"
    },
    {
      "sid": "s000519",
      "text": "Right?",
      "start": 3040860,
      "end": 3041260,
      "role": "lecture"
    },
    {
      "sid": "s000520",
      "text": "Because is A Connected to B, not B connected to A.",
      "start": 3041260,
      "end": 3045340,
      "role": "lecture"
    },
    {
      "sid": "s000521",
      "text": "With directed graph, that's important.",
      "start": 3045580,
      "end": 3047340,
      "role": "lecture"
    },
    {
      "sid": "s000522",
      "text": "If it was not directed, then B would have been connected both to A and D. So B is connected to D. C is connected to E and E D is connected to nothing.",
      "start": 3047820,
      "end": 3067180,
      "role": "lecture"
    },
    {
      "sid": "s000523",
      "text": "E is connected to nothing.",
      "start": 3067260,
      "end": 3068940,
      "role": "lecture"
    },
    {
      "sid": "s000524",
      "text": "This is the linked list representation, right?",
      "start": 3069100,
      "end": 3074790,
      "role": "lecture"
    },
    {
      "sid": "s000525",
      "text": "So if I give you this list, you can draw the graph.",
      "start": 3075350,
      "end": 3079990,
      "role": "lecture"
    },
    {
      "sid": "s000526",
      "text": "If I give you the graph, you can draw this.",
      "start": 3080310,
      "end": 3082750,
      "role": "lecture"
    },
    {
      "sid": "s000527",
      "text": "So this is one way to represent a directed graph.",
      "start": 3082750,
      "end": 3086310,
      "role": "lecture"
    },
    {
      "sid": "s000528",
      "text": "Another way to represent a graph defined by a matrix.",
      "start": 3088470,
      "end": 3092310,
      "role": "lecture"
    },
    {
      "sid": "s000529",
      "text": "You have A, B, C, D tangent rows of the matrix A, B, C, D, E is going to be columns of the matrix.",
      "start": 3092710,
      "end": 3104040,
      "role": "lecture"
    },
    {
      "sid": "s000530",
      "text": "Each entry is going to be 0 or 1.",
      "start": 3104600,
      "end": 3108280,
      "role": "lecture"
    },
    {
      "sid": "s000531",
      "text": "Zero means an edge doesn't exist from B to C. It's always from rows to columns, not vice versa.",
      "start": 3110040,
      "end": 3119000,
      "role": "lecture"
    },
    {
      "sid": "s000532",
      "text": "So A1 here means B is connected to C in a directed graph.",
      "start": 3119160,
      "end": 3129330,
      "role": "lecture"
    },
    {
      "sid": "s000533",
      "text": "If a graph is not connected is not directed, then BC is the same as cb.",
      "start": 3133170,
      "end": 3140290,
      "role": "lecture"
    },
    {
      "sid": "s000534",
      "text": "Therefore, this matrix becomes symmetric in an undirected graph.",
      "start": 3141570,
      "end": 3146930,
      "role": "lecture"
    },
    {
      "sid": "s000535",
      "text": "Because if you have a 1 between B and C, you must have a 1 between C and B.",
      "start": 3146930,
      "end": 3152890,
      "role": "lecture"
    },
    {
      "sid": "s000536",
      "text": "But in a directed graph that's not the case.",
      "start": 3153370,
      "end": 3155850,
      "role": "lecture"
    },
    {
      "sid": "s000537",
      "text": "It's not a symmetric matrix.01 matrix.",
      "start": 3157130,
      "end": 3161210,
      "role": "lecture"
    },
    {
      "sid": "s000538",
      "text": "Okay, so when you are analyzing your algorithm, you want to say I'm using a linked Lister representation or I'm using a matrix representation.",
      "start": 3164730,
      "end": 3177460,
      "role": "lecture"
    },
    {
      "sid": "s000539",
      "text": "Generally a linked list representation is a lot more compact because suppose you have 10 by 10 matrix hundred entries and you have only three edges.",
      "start": 3180020,
      "end": 3196100,
      "role": "lecture"
    },
    {
      "sid": "s000540",
      "text": "You put three ones here, but you gotta have 97 zeros.",
      "start": 3196820,
      "end": 3201710,
      "role": "lecture"
    },
    {
      "sid": "s000541",
      "text": "That's a lot of inefficient use of memory.",
      "start": 3201790,
      "end": 3205390,
      "role": "lecture"
    },
    {
      "sid": "s000542",
      "text": "Whereas here the number of nick you put is equal to the number of edges, so about three of them.",
      "start": 3206030,
      "end": 3211950,
      "role": "lecture"
    },
    {
      "sid": "s000543",
      "text": "So that's the pros and cons.",
      "start": 3213310,
      "end": 3215070,
      "role": "lecture"
    },
    {
      "sid": "s000544",
      "text": "On the other hand, if I want to ask is there an edge between B and C?",
      "start": 3216990,
      "end": 3222470,
      "role": "lecture"
    },
    {
      "sid": "s000545",
      "text": "I go to that entry and in constant time I know the answer.",
      "start": 3222470,
      "end": 3227120,
      "role": "lecture"
    },
    {
      "sid": "s000546",
      "text": "If I want to know, is there an edge between B and C?",
      "start": 3227760,
      "end": 3230840,
      "role": "lecture"
    },
    {
      "sid": "s000547",
      "text": "I'm going to start from B and go through the entire list to see if I ever see C or not.",
      "start": 3230840,
      "end": 3238320,
      "role": "lecture"
    },
    {
      "sid": "s000548",
      "text": "So it could take linear time to know if an edge exists.",
      "start": 3238880,
      "end": 3242880,
      "role": "lecture"
    },
    {
      "sid": "s000549",
      "text": "So more compact, slow searching for an edge, less compact, very fast search.",
      "start": 3243680,
      "end": 3252140,
      "role": "lecture"
    },
    {
      "sid": "s000550",
      "text": "It all depends on your problem structure.",
      "start": 3252140,
      "end": 3257980,
      "role": "lecture"
    },
    {
      "sid": "s000551",
      "text": "If your graph is known to have a lot of edges, you may want to use this structure.",
      "start": 3258300,
      "end": 3264700,
      "role": "lecture"
    },
    {
      "sid": "s000552",
      "text": "If your graph is known not to have many edges, you may want to use this structure.",
      "start": 3265100,
      "end": 3270620,
      "role": "lecture"
    },
    {
      "sid": "s000553",
      "text": "But we will practice with that and we'll see what fits when.",
      "start": 3270700,
      "end": 3274140,
      "role": "lecture"
    },
    {
      "sid": "s000555",
      "text": "So Again, these two are referred to as matrix representation or linked list representation of a graph.",
      "start": 3287670,
      "end": 3294790,
      "role": "lecture"
    },
    {
      "sid": "s000556",
      "text": "In the exam, in the homework, if you tell me I'm using a linked list representation, I know what you're talking about.",
      "start": 3296230,
      "end": 3302470,
      "role": "lecture"
    },
    {
      "sid": "s000557",
      "text": "If you say I'm using matrix representation, I know what you mean.",
      "start": 3303040,
      "end": 3306320,
      "role": "lecture"
    },
    {
      "sid": "s000558",
      "text": "You don't need to define all of these.",
      "start": 3306640,
      "end": 3309120,
      "role": "lecture"
    },
    {
      "sid": "s000786",
      "text": "If I do that, then the algorithm becomes N squared and I'm not going to worry about where I'm going to store everything for every part of the algorithm.",
      "start": 4733719,
      "end": 4746130,
      "role": "lecture"
    },
    {
      "sid": "s000787",
      "text": "But here it did matter, so I need to focus and emphasize and highlight it.",
      "start": 4746130,
      "end": 4751210,
      "role": "lecture"
    }
  ]
}